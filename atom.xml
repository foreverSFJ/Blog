<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>foreverSFJ</title>
  
  <subtitle>今夜月色真美，希望风也温柔~~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.foreversfj.com/"/>
  <updated>2019-09-03T12:00:35.880Z</updated>
  <id>https://blog.foreversfj.com/</id>
  
  <author>
    <name>foreverSFJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hibernate单向多对一的关联映射</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2020-04-27-Hibernate/%E5%8D%95%E5%90%91%E5%A4%9A%E5%AF%B9%E4%B8%80%E7%9A%84%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2020-04-27-Hibernate/%E5%8D%95%E5%90%91%E5%A4%9A%E5%AF%B9%E4%B8%80%E7%9A%84%E5%85%B3%E8%81%94%E6%98%A0%E5%B0%84.html</id>
    <published>2020-04-27T08:59:26.222Z</published>
    <updated>2019-09-03T12:00:35.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、学生表student和年级表grade"><a href="#1、学生表student和年级表grade" class="headerlink" title="1、学生表student和年级表grade"></a>1、学生表<code>student</code>和年级表<code>grade</code></h1><p><img src="//cdn.foreversfj.com/image/blog/20190714/VzJMLlFC0Inj.png!blogy" alt=""></p><h1 id="2、类Student和Grade类"><a href="#2、类Student和Grade类" class="headerlink" title="2、类Student和Grade类"></a>2、类<code>Student</code>和<code>Grade</code>类</h1><ul><li><strong><code>Student</code>:</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> Grade grade;</span><br><span class="line">    <span class="comment">//get…set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>Grande</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Grade</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//get…set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3、映射文件"><a href="#3、映射文件" class="headerlink" title="3、映射文件"></a>3、映射文件</h1><ul><li><code>Grade.hbm.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"cn.siggy.pojo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Grade"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>Student.hbm.xml</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">"cn.siggy.pojo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"Student"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"native"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 多对一  name表示属性名</span></span><br><span class="line"><span class="comment">                    class 指明属性对应的类</span></span><br><span class="line"><span class="comment">                    column指 数据库表中的列名</span></span><br><span class="line"><span class="comment">         --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">"grade"</span> <span class="attr">class</span>=<span class="string">"Grade"</span> <span class="attr">column</span>=<span class="string">"grade_id"</span> <span class="attr">foreign-key</span>=<span class="string">"fk_grade"</span> <span class="attr">not-null</span>=<span class="string">"true"</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4、测试代码"><a href="#4、测试代码" class="headerlink" title="4、测试代码"></a>4、测试代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> <span class="keyword">throws</span> HibernateException, SerialException, SQLException</span>&#123;</span><br><span class="line">    Session session = <span class="keyword">null</span>;</span><br><span class="line">    Transaction tx = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        session = HibernateUtil.getSession();</span><br><span class="line">        tx = session.beginTransaction();</span><br><span class="line">        Grade grade = <span class="keyword">new</span> Grade();</span><br><span class="line">        grade.setName(<span class="string">"基础"</span>);</span><br><span class="line">        session.save(grade);</span><br><span class="line">        Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">        stu.setName(<span class="string">"张三疯"</span>);</span><br><span class="line">        stu.setAge(<span class="number">22</span>);</span><br><span class="line">        stu.setGrade(grade);</span><br><span class="line">        session.save(stu);</span><br><span class="line"></span><br><span class="line">        tx.commit();</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">catch</span> (HibernateException e) &#123;</span><br><span class="line">        <span class="keyword">if</span>(tx!=<span class="keyword">null</span>)</span><br><span class="line">            tx.rollback();</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> e;</span><br><span class="line">    &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">        HibernateUtil.closeSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Hibernate单向多对一的关联映射
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Hibernate" scheme="https://blog.foreversfj.com/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十四章 3.Redis工具</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_3%20Redis%E5%B7%A5%E5%85%B7.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_3%20Redis%E5%B7%A5%E5%85%B7.html</id>
    <published>2019-08-28T03:28:23.000Z</published>
    <updated>2019-09-05T17:24:12.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="14-3-Redis工具"><a href="#14-3-Redis工具" class="headerlink" title="14.3 Redis工具"></a>14.3 Redis工具</h1><h2 id="14-3-1-持久化"><a href="#14-3-1-持久化" class="headerlink" title="14.3.1 持久化"></a>14.3.1 持久化</h2><ul><li><p>redis是一个内存数据库，当redis服务器重启，或者电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。</p></li><li><p>redis持久化机制：</p><ul><li><p><strong>RDB</strong>：默认方式，不需要进行配置，默认就使用这种机制</p><blockquote><p>在一定的间隔时间中，检测key的变化情况，然后持久化数据</p></blockquote><ol><li>编辑<code>redis.windwos.conf</code>文件<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   after 900 sec (15 min) if at least 1 key changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">900 1</span></span><br><span class="line"><span class="comment">#   after 300 sec (5 min) if at least 10 keys changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">300 10</span></span><br><span class="line"><span class="comment">#   after 60 sec if at least 10000 keys changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">60 10000</span></span><br></pre></td></tr></table></figure></li><li>重新启动redis服务器，并指定配置文件名称<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\JavaWeb\redis\windows<span class="number">-64</span>\redis<span class="number">-2.8</span><span class="number">.9</span>&gt;redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>AOF</strong>：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据</p><ol><li>编辑<code>redis.windwos.conf</code>文件<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">appendonly</span> <span class="string">no（关闭aof） --&gt; appendonly yes （开启aof）</span></span><br><span class="line"><span class="comment"># appendfsync always ： 每一次操作都进行持久化</span></span><br><span class="line"><span class="attr">appendfsync</span> <span class="string">everysec ： 每隔一秒进行一次持久化</span></span><br><span class="line"><span class="comment"># appendfsync no     ： 不进行持久化</span></span><br></pre></td></tr></table></figure></li></ol></li></ul></li></ul><h2 id="14-3-2-Java客户端-Jedis"><a href="#14-3-2-Java客户端-Jedis" class="headerlink" title="14.3.2 Java客户端 Jedis"></a>14.3.2 Java客户端 Jedis</h2><ul><li><strong><code>Jedis</code></strong>： 一款java操作redis数据库的工具.</li></ul><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>下载jedis的jar包</li><li>使用  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line">jedis.set(<span class="string">"username"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure></li></ol><h4 id="Jedis操作各种redis中的数据结构"><a href="#Jedis操作各种redis中的数据结构" class="headerlink" title="Jedis操作各种redis中的数据结构"></a>Jedis操作各种redis中的数据结构</h4><h5 id="●-字符串类型-string"><a href="#●-字符串类型-string" class="headerlink" title="● 字符串类型 string"></a>● 字符串类型 string</h5><ul><li><strong><code>set</code></strong></li><li><strong><code>get</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line"><span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">//存储</span></span><br><span class="line">jedis.set(<span class="string">"username"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line">String username = jedis.get(<span class="string">"username"</span>);</span><br><span class="line">System.out.println(username);</span><br><span class="line"><span class="comment">//可以使用setex()方法存储可以指定过期时间的 key value</span></span><br><span class="line"><span class="comment">//将activecode：hehe键值对存入redis，并且20秒后自动删除该键值对</span></span><br><span class="line">jedis.setex(<span class="string">"activecode"</span>,<span class="number">20</span>,<span class="string">"hehe"</span>);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-哈希类型-hash"><a href="#●-哈希类型-hash" class="headerlink" title="● 哈希类型 hash"></a>● 哈希类型 hash</h5><p><strong>map格式</strong>  </p><ul><li><strong><code>hset</code></strong></li><li><strong><code>hget</code></strong></li><li><strong><code>hgetAll</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// 存储hash</span></span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"name"</span>,<span class="string">"lisi"</span>);</span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"age"</span>,<span class="string">"23"</span>);</span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"gender"</span>,<span class="string">"female"</span>);</span><br><span class="line"><span class="comment">// 获取hash</span></span><br><span class="line">String name = jedis.hget(<span class="string">"user"</span>, <span class="string">"name"</span>);</span><br><span class="line">System.out.println(name);</span><br><span class="line"><span class="comment">// 获取hash的所有map中的数据</span></span><br><span class="line">Map&lt;String, String&gt; user = jedis.hgetAll(<span class="string">"user"</span>);</span><br><span class="line"><span class="comment">// keyset</span></span><br><span class="line">Set&lt;String&gt; keySet = user.keySet();</span><br><span class="line"><span class="keyword">for</span> (String key : keySet) &#123;</span><br><span class="line">    <span class="comment">//获取value</span></span><br><span class="line">    String value = user.get(key);</span><br><span class="line">    System.out.println(key + <span class="string">":"</span> + value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-列表类型-list"><a href="#●-列表类型-list" class="headerlink" title="● 列表类型 list"></a>● 列表类型 list</h5><p><strong>linkedlist格式。支持重复元素</strong></p><ul><li><strong><code>lpush / rpush</code></strong></li><li><strong><code>lpop / rpop</code></strong></li><li><strong><code>lrange start end</code></strong>：范围获取</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// list 存储</span></span><br><span class="line">jedis.lpush(<span class="string">"mylist"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//从左边存</span></span><br><span class="line">jedis.rpush(<span class="string">"mylist"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//从右边存</span></span><br><span class="line"><span class="comment">// list 范围获取</span></span><br><span class="line">List&lt;String&gt; mylist = jedis.lrange(<span class="string">"mylist"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mylist);</span><br><span class="line"><span class="comment">// list 弹出</span></span><br><span class="line">String element1 = jedis.lpop(<span class="string">"mylist"</span>);<span class="comment">//c</span></span><br><span class="line">System.out.println(element1);</span><br><span class="line">String element2 = jedis.rpop(<span class="string">"mylist"</span>);<span class="comment">//c</span></span><br><span class="line">System.out.println(element2);</span><br><span class="line"><span class="comment">// list 范围获取</span></span><br><span class="line">List&lt;String&gt; mylist2 = jedis.lrange(<span class="string">"mylist"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mylist2);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-集合类型-set"><a href="#●-集合类型-set" class="headerlink" title="● 集合类型 set"></a>● 集合类型 set</h5><p><strong>不允许重复元素</strong></p><ul><li><strong><code>sadd</code></strong></li><li><strong><code>smembers</code></strong>：获取所有元素</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// set 存储</span></span><br><span class="line">jedis.sadd(<span class="string">"myset"</span>,<span class="string">"java"</span>,<span class="string">"php"</span>,<span class="string">"c++"</span>);</span><br><span class="line"><span class="comment">// set 获取</span></span><br><span class="line">Set&lt;String&gt; myset = jedis.smembers(<span class="string">"myset"</span>);</span><br><span class="line">System.out.println(myset);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-有序集合类型-sortedset"><a href="#●-有序集合类型-sortedset" class="headerlink" title="● 有序集合类型 sortedset"></a>● 有序集合类型 sortedset</h5><p><strong>不允许重复元素，且元素有顺序</strong></p><ul><li><strong><code>zadd</code></strong></li><li><strong><code>zrange</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// sortedset 存储</span></span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">3</span>,<span class="string">"亚瑟"</span>);</span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">30</span>,<span class="string">"后裔"</span>);</span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">55</span>,<span class="string">"孙悟空"</span>);</span><br><span class="line"><span class="comment">// sortedset 获取</span></span><br><span class="line">Set&lt;String&gt; mysortedset = jedis.zrange(<span class="string">"mysortedset"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mysortedset);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h3 id="jedis连接池：-JedisPool"><a href="#jedis连接池：-JedisPool" class="headerlink" title="jedis连接池： JedisPool"></a>jedis连接池： JedisPool</h3><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ol><li><p>创建JedisPool连接池对象</p></li><li><p>调用方法 getResource()方法获取Jedis连接</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0.创建一个配置对象</span></span><br><span class="line">JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">config.setMaxTotal(<span class="number">50</span>);</span><br><span class="line">config.setMaxIdle(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//1.创建Jedis连接池对象</span></span><br><span class="line">JedisPool jedisPool = <span class="keyword">new</span> JedisPool(config,<span class="string">"localhost"</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="comment">//2.获取连接</span></span><br><span class="line">Jedis jedis = jedisPool.getResource();</span><br><span class="line"><span class="comment">//3. 使用</span></span><br><span class="line">jedis.set(<span class="string">"hehe"</span>,<span class="string">"heihei"</span>);</span><br><span class="line"><span class="comment">//4. 关闭 归还到连接池中</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure></li></ol><h4 id="连接池工具类"><a href="#连接池工具类" class="headerlink" title="连接池工具类"></a>连接池工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//读取配置文件</span></span><br><span class="line">        InputStream is = JedisPoolUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">        <span class="comment">//创建Properties对象</span></span><br><span class="line">        Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//关联文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pro.load(is);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取数据，设置到JedisPoolConfig中</span></span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(Integer.parseInt(pro.getProperty(<span class="string">"maxTotal"</span>)));</span><br><span class="line">        config.setMaxIdle(Integer.parseInt(pro.getProperty(<span class="string">"maxIdle"</span>)));</span><br><span class="line">        <span class="comment">//初始化JedisPool</span></span><br><span class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config,pro.getProperty(<span class="string">"host"</span>),Integer.parseInt(pro.getProperty(<span class="string">"port"</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取连接方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      redis是一个内存数据库，当redis服务器重启，或者电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十四章 2.Redis使用</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_2%20Redis%E4%BD%BF%E7%94%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_2%20Redis%E4%BD%BF%E7%94%A8.html</id>
    <published>2019-08-28T02:55:57.000Z</published>
    <updated>2019-09-05T15:39:45.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="14-2-Redis使用"><a href="#14-2-Redis使用" class="headerlink" title="14.2 Redis使用"></a>14.2 Redis使用</h1><h2 id="14-2-1-下载安装"><a href="#14-2-1-下载安装" class="headerlink" title="14.2.1 下载安装"></a>14.2.1 下载安装</h2><ul><li>官网：<a href="https://redis.io" target="_blank" rel="noopener">https://redis.io</a></li><li>中文网：<a href="http://www.redis.net.cn/" target="_blank" rel="noopener">http://www.redis.net.cn/</a></li><li>解压直接可以使用：<ul><li><strong><code>redis.windows.conf</code></strong>：配置文件</li><li><strong><code>redis-cli.exe</code></strong>：redis的客户端</li><li><strong><code>redis-server.exe</code></strong>：redis服务器端</li></ul></li></ul><h2 id="14-2-2-命令操作"><a href="#14-2-2-命令操作" class="headerlink" title="14.2.2 命令操作"></a>14.2.2 命令操作</h2><h3 id="redis的数据结构"><a href="#redis的数据结构" class="headerlink" title="redis的数据结构"></a>redis的数据结构</h3><ul><li><p>redis存储的是：key,value格式的数据，其中key都是字符串，value有5种不同的数据结构</p><ul><li><p>value的数据结构：</p><ol><li>字符串类型 string</li><li>哈希类型 hash ： map格式  </li><li>列表类型 list ： linkedlist格式。支持重复元素</li><li>集合类型 set  ： 不允许重复元素</li><li>有序集合类型 sortedset：不允许重复元素，且元素有顺序</li></ol><p><img src="//cdn.foreversfj.com/image/blog/20190905/V4bhfworbYOy.png!blog" alt=""></p></li></ul></li></ul><h3 id="字符串类型-string"><a href="#字符串类型-string" class="headerlink" title="字符串类型 string"></a>字符串类型 string</h3><ol><li>存储：<strong><code>set key value</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; <span class="built_in">set</span> username zhangsan</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></li><li>获取：<strong><code>get key</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; <span class="built_in">get</span> username</span><br><span class="line"><span class="string">"zhangsan"</span></span><br></pre></td></tr></table></figure></li><li>删除：<strong><code>del key</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; del age</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="哈希类型-hash"><a href="#哈希类型-hash" class="headerlink" title="哈希类型 hash"></a>哈希类型 hash</h3><ol><li>存储：<strong><code>hset key field value</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; hset myhash username lisi</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; hset myhash password <span class="number">123</span></span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li>获取：<ul><li><strong><code>hget key field</code></strong>：获取指定的field对应的值<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; hget myhash username</span><br><span class="line"><span class="string">"lisi"</span></span><br></pre></td></tr></table></figure></li><li><strong><code>hgetall key</code></strong>：获取所有的field和value<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; hgetall myhash</span><br><span class="line"><span class="number">1</span>) <span class="string">"username"</span></span><br><span class="line"><span class="number">2</span>) <span class="string">"lisi"</span></span><br><span class="line"><span class="number">3</span>) <span class="string">"password"</span></span><br><span class="line"><span class="number">4</span>) <span class="string">"123"</span></span><br></pre></td></tr></table></figure></li></ul></li><li>删除：<strong><code>hdel key field</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; hdel myhash username</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="列表类型-list"><a href="#列表类型-list" class="headerlink" title="列表类型 list"></a>列表类型 list</h3><p><b><font color=red>可以添加一个元素到列表的头部（左边）或者尾部（右边）</font></b></p><ul><li><strong>添加：</strong><ul><li><strong><code>lpush key value</code></strong>：将元素加入列表左表</li><li><strong><code>rpush key value</code></strong>：将元素加入列表右边<br><img src="//cdn.foreversfj.com/image/blog/20190905/NcC6MEH0LmFk.png!blog" alt=""><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; lpush myList a</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; lpush myList b</span><br><span class="line">(integer) <span class="number">2</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; rpush myList c</span><br><span class="line">(integer) <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>获取：</strong><ul><li><strong><code>lrange key start end</code></strong>：范围获取<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; lrange myList <span class="number">0</span> <span class="number">-1</span></span><br><span class="line"><span class="number">1</span>) <span class="string">"b"</span></span><br><span class="line"><span class="number">2</span>) <span class="string">"a"</span></span><br><span class="line"><span class="number">3</span>) <span class="string">"c"</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>删除：</strong><ul><li><strong><code>lpop key</code></strong>： 删除列表最左边的元素，并将元素返回</li><li><strong><code>rpop key</code></strong>： 删除列表最右边的元素，并将元素返回</li></ul></li></ul><h3 id="集合类型-set"><a href="#集合类型-set" class="headerlink" title="集合类型 set"></a>集合类型 set</h3><p><b><font color=red>不允许重复元素</font></b></p><ul><li>存储：<strong><code>sadd key value</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; sadd myset a</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; sadd myset a</span><br><span class="line">(integer) <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>获取：<strong><code>smembers key</code></strong>：获取set集合中所有元素<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; smembers myset</span><br><span class="line"><span class="number">1</span>) <span class="string">"a"</span></span><br></pre></td></tr></table></figure></li><li>删除：<strong><code>srem key value</code></strong>：删除set集合中的某个元素    <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; srem myset a</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="有序集合类型-sortedset"><a href="#有序集合类型-sortedset" class="headerlink" title="有序集合类型 sortedset"></a>有序集合类型 sortedset</h3><p><b><font color=red>不允许重复元素，且元素有顺序。</font></b>每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。</p><ul><li>存储：<strong><code>zadd key score value</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zadd mysort <span class="number">60</span> zhangsan</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zadd mysort <span class="number">50</span> lisi</span><br><span class="line">(integer) <span class="number">1</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zadd mysort <span class="number">80</span> wangwu</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li>获取：<strong><code>zrange key start end [withscores]</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zrange mysort <span class="number">0</span> <span class="number">-1</span></span><br><span class="line"><span class="number">1</span>) <span class="string">"lisi"</span></span><br><span class="line"><span class="number">2</span>) <span class="string">"zhangsan"</span></span><br><span class="line"><span class="number">3</span>) <span class="string">"wangwu"</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zrange mysort <span class="number">0</span> <span class="number">-1</span> withscores</span><br><span class="line"><span class="number">1</span>) <span class="string">"zhangsan"</span></span><br><span class="line"><span class="number">2</span>) <span class="string">"60"</span></span><br><span class="line"><span class="number">3</span>) <span class="string">"wangwu"</span></span><br><span class="line"><span class="number">4</span>) <span class="string">"80"</span></span><br><span class="line"><span class="number">5</span>) <span class="string">"lisi"</span></span><br><span class="line"><span class="number">6</span>) <span class="string">"500"</span></span><br></pre></td></tr></table></figure></li><li>删除：<strong><code>zrem key value</code></strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; zrem mysort lisi</span><br><span class="line">(integer) <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="通用命令"><a href="#通用命令" class="headerlink" title="通用命令"></a>通用命令</h3><ul><li><strong><code>keys *</code></strong>：查询所有的键</li><li><strong><code>type key</code></strong>： 获取键对应的value的类型</li><li><strong><code>del key</code></strong>：删除指定的key value</li></ul><h2 id="14-2-3-一个小练习"><a href="#14-2-3-一个小练习" class="headerlink" title="14.2.3 一个小练习"></a>14.2.3 一个小练习</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><ol><li>提供index.html页面，页面中有一个省份 下拉列表</li><li>当 页面加载完成后 发送ajax请求，加载所有省份</li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>使用redis缓存一些不经常发生变化的数据。<ul><li>数据库的数据一旦发生改变，则需要更新缓存。<ul><li>数据库的表执行 增删改的相关操作，需要将redis缓存数据情况，再次存入</li><li>在service对应的增删改方法中，将redis数据删除。</li></ul></li></ul></li></ul><p><img src="//cdn.foreversfj.com/image/blog/20190905/gcyjG7mX1Sjb.png!blog" alt=""></p>]]></content>
    
    <summary type="html">
    
      本节讲述Redis的基本使用语法
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十四章 1.Redis</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_1%20Redis%E5%85%A5%E9%97%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/14_1%20Redis%E5%85%A5%E9%97%A8.html</id>
    <published>2019-08-28T02:45:48.000Z</published>
    <updated>2019-09-05T15:33:52.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="14-1-Redis概念"><a href="#14-1-Redis概念" class="headerlink" title="14.1 Redis概念"></a>14.1 Redis概念</h1><p><strong>redis是一款高性能的NOSQL系列的非关系型数据库</strong></p><h2 id="14-1-1-什么是NOSQL"><a href="#14-1-1-什么是NOSQL" class="headerlink" title="14.1.1 什么是NOSQL"></a>14.1.1 什么是NOSQL</h2><p>&emsp;&emsp;<strong>NoSQL</strong>(<i>NoSQL = Not Only SQL</i>)，意即“不仅仅是SQL”，是一项全新的数据库理念，泛指非关系型的数据库。</p><p>&emsp;&emsp;随着互联网web2.0网站的兴起，传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。</p><h3 id="NOSQL和关系型数据库比较"><a href="#NOSQL和关系型数据库比较" class="headerlink" title="NOSQL和关系型数据库比较"></a>NOSQL和关系型数据库比较</h3><ul><li><p><strong>优点：</strong></p><ul><li>成本：nosql数据库简单易部署，基本都是开源软件，不需要像使用oracle那样花费大量成本购买使用，相比关系型数据库价格便宜。</li><li>查询速度：nosql数据库将数据存储于缓存之中，关系型数据库将数据存储在硬盘中，自然查询速度远不及nosql数据库。</li><li>存储数据的格式：nosql的存储格式是key,value形式、文档形式、图片形式等等，所以可以存储基础类型以及对象或者是集合等各种格式，而数据库则只支持基础类型。</li><li>扩展性：关系型数据库有类似join这样的多表查询机制的限制导致扩展很艰难。</li></ul></li><li><p><strong>缺点：</strong></p><ul><li>维护的工具和资料有限，因为nosql是属于新的技术，不能和关系型数据库10几年的技术同日而语。</li><li>不提供对sql的支持，如果不支持sql这样的工业标准，将产生一定用户的学习和使用成本。</li><li>不提供关系型数据库对事务的处理。</li></ul><p><img src="//cdn.foreversfj.com/image/blog/20190905/4VPpver90VNr.png!blog" alt=""></p></li></ul><h3 id="非关系型数据库的优势"><a href="#非关系型数据库的优势" class="headerlink" title="非关系型数据库的优势"></a>非关系型数据库的优势</h3><ul><li>性能NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。</li><li>可扩展性同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。</li></ul><h3 id="关系型数据库的优势"><a href="#关系型数据库的优势" class="headerlink" title="关系型数据库的优势"></a>关系型数据库的优势</h3><ul><li>复杂查询可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。</li><li>事务支持使得对于安全性能很高的数据访问要求得以实现。对于这两类数据库，对方的优势就是自己的弱势，反之亦然。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>&emsp;&emsp;关系型数据库与NoSQL数据库并非对立而是互补的关系，即通常情况下使用关系型数据库，在适合使用NoSQL的时候使用NoSQL数据库，</p><p>&emsp;&emsp;让NoSQL数据库对关系型数据库的不足进行弥补。</p><p>&emsp;&emsp;一般会将数据存储在关系型数据库中，在nosql数据库中备份存储关系型数据库的数据</p><h2 id="14-1-2-主流的NOSQL产品"><a href="#14-1-2-主流的NOSQL产品" class="headerlink" title="14.1.2 主流的NOSQL产品"></a>14.1.2 主流的NOSQL产品</h2><h3 id="键值-Key-Value-存储数据库"><a href="#键值-Key-Value-存储数据库" class="headerlink" title="键值(Key-Value)存储数据库"></a>键值(Key-Value)存储数据库</h3><ul><li>相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB</li><li>典型应用： 内容缓存，主要用于处理大量数据的高访问负载。 </li><li>数据模型： 一系列键值对</li><li>优势： 快速查询</li><li>劣势： 存储的数据缺少结构化</li></ul><h3 id="列存储数据库"><a href="#列存储数据库" class="headerlink" title="列存储数据库"></a>列存储数据库</h3><ul><li>相关产品：Cassandra, HBase, Riak</li><li>典型应用：分布式的文件系统</li><li>数据模型：以列簇式存储，将同一列数据存在一起</li><li>优势：查找速度快，可扩展性强，更容易进行分布式扩展</li><li>劣势：功能相对局限</li></ul><h3 id="文档型数据库"><a href="#文档型数据库" class="headerlink" title="文档型数据库"></a>文档型数据库</h3><ul><li>相关产品：CouchDB、MongoDB</li><li>典型应用：Web应用（与Key-Value类似，Value是结构化的）</li><li>数据模型： 一系列键值对</li><li>优势：数据结构要求不严格</li><li>劣势： 查询性能不高，而且缺乏统一的查询语法</li></ul><h3 id="图形-Graph-数据库"><a href="#图形-Graph-数据库" class="headerlink" title="图形(Graph)数据库"></a>图形(Graph)数据库</h3><ul><li>相关数据库：Neo4J、InfoGrid、Infinite Graph</li><li>典型应用：社交网络</li><li>数据模型：图结构</li><li>优势：利用图结构相关算法。</li><li>劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。</li></ul><h2 id="14-1-3-什么是Redis"><a href="#14-1-3-什么是Redis" class="headerlink" title="14.1.3 什么是Redis"></a>14.1.3 什么是Redis</h2><p>&emsp;&emsp;Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库，官方提供测试数据，50个并发执行100000个请求,读的速度是110000次/s,写的速度是81000次/s ，且Redis通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：</p><ul><li>字符串类型 string</li><li>哈希类型 hash</li><li>列表类型 list</li><li>集合类型 set</li><li>有序集合类型 sortedset</li></ul><h3 id="redis的应用场景"><a href="#redis的应用场景" class="headerlink" title="redis的应用场景"></a>redis的应用场景</h3><ul><li>缓存（数据查询、短连接、新闻内容、商品内容等等）</li><li>聊天室的在线好友列表</li><li>任务队列。（秒杀、抢购、12306等等）</li><li>应用排行榜</li><li>网站访问统计</li><li>数据过期处理（可以精确到毫秒</li><li>分布式集群架构中的session分离</li></ul>]]></content>
    
    <summary type="html">
    
      redis是一款高性能的NOSQL系列的非关系型数据库
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十三章 2.JSON</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/13_2%20JSON.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/13_2%20JSON.html</id>
    <published>2019-08-28T02:25:40.000Z</published>
    <updated>2019-09-05T15:31:52.078Z</updated>
    
    <content type="html"><![CDATA[<h1 id="13-2-JSON"><a href="#13-2-JSON" class="headerlink" title="13.2 JSON"></a>13.2 JSON</h1><h2 id="13-2-1-概念"><a href="#13-2-1-概念" class="headerlink" title="13.2.1 概念"></a>13.2.1 概念</h2><p><strong>JavaScript Object Notation</strong>===&gt;JavaScript对象表示法</p><p><img src="http://cdn.foreversfj.com/image/blog/20190905/fc5zY4hmRFma.png?imageslim" alt="mark"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Person p = <span class="keyword">new</span> Person();</span><br><span class="line">p.setName(<span class="string">"张三"</span>);</span><br><span class="line">p.setAge(<span class="number">23</span>);</span><br><span class="line">p.setGender(<span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = &#123;<span class="string">"name"</span>:<span class="string">"张三"</span>,<span class="string">"age"</span>:<span class="number">23</span>,<span class="string">"gender"</span>:<span class="string">"男"</span>&#125;;</span><br></pre></td></tr></table></figure><ul><li>json现在多用于存储和交换文本信息的语法</li><li>进行数据的传输</li><li>JSON 比 XML 更小、更快，更易解析。</li></ul><h2 id="13-2-2-语法"><a href="#13-2-2-语法" class="headerlink" title="13.2.2 语法"></a>13.2.2 语法</h2><h3 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h3><ul><li>数据在名称/值对中：json数据是由键值对构成的<ul><li>键用引号(单双都行)引起来，也可以不使用引号</li><li>值得取值类型：<ol><li>数字（整数或浮点数）</li><li>字符串（在双引号中）</li><li>逻辑值（true 或 false）</li><li>数组（在方括号中）<code>{&quot;persons&quot;:[{},{}]}</code></li><li>对象（在花括号中）<code>{&quot;address&quot;:{&quot;province&quot;：&quot;陕西&quot;....}}</code></li><li>null</li></ol></li></ul></li><li>数据由逗号分隔：多个键值对由逗号分隔</li><li>花括号保存对象：使用<code>{}</code>定义json 格式</li><li>方括号保存数组：<code>[]</code></li></ul><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><ol><li>json对象.键名</li><li>json对象[“键名”]</li><li>数组对象[索引]</li><li>遍历  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.定义基本格式</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="string">"name"</span>: <span class="string">"张三"</span>, <span class="attr">age</span>: <span class="number">23</span>, <span class="string">'gender'</span>: <span class="literal">true</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> ps = [&#123;<span class="string">"name"</span>: <span class="string">"张三"</span>, <span class="string">"age"</span>: <span class="number">23</span>, <span class="string">"gender"</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">          &#123;<span class="string">"name"</span>: <span class="string">"李四"</span>, <span class="string">"age"</span>: <span class="number">24</span>, <span class="string">"gender"</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">          &#123;<span class="string">"name"</span>: <span class="string">"王五"</span>, <span class="string">"age"</span>: <span class="number">25</span>, <span class="string">"gender"</span>: <span class="literal">false</span>&#125;];</span><br><span class="line"><span class="comment">//获取person对象中所有的键和值</span></span><br><span class="line"><span class="comment">/** //for in 循环</span></span><br><span class="line"><span class="comment"> * for(var key in person)&#123;</span></span><br><span class="line"><span class="comment"> *   //这样的方式获取不行。因为相当于  person."name"</span></span><br><span class="line"><span class="comment"> *   //alert(key + ":" + person.key);</span></span><br><span class="line"><span class="comment"> *   alert(key+":"+person[key]);</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//获取ps中的所有值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ps.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> p = ps[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> p)&#123;</span><br><span class="line">        alert(key+<span class="string">":"</span>+p[key]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="13-2-3-JSON数据和Java对象的相互转换"><a href="#13-2-3-JSON数据和Java对象的相互转换" class="headerlink" title="13.2.3 JSON数据和Java对象的相互转换"></a>13.2.3 JSON数据和Java对象的相互转换</h2><ul><li><strong>JSON解析器：</strong><ul><li>常见的解析器：<code>Jsonlib</code>，<code>Gson</code>，<code>fastjson</code>，<code>jackson</code></li></ul></li></ul><ol><li><p><strong>JSON转为Java对象</strong></p><ol><li>导入jackson的相关jar包</li><li>创建Jackson核心对象 ObjectMapper</li><li>调用ObjectMapper的相关方法进行转换<ol><li>readValue(json字符串数据,Class)</li></ol></li></ol></li><li><p><strong>Java对象转换JSON</strong></p><ol><li><p>使用步骤：</p><ul><li>导入jackson的相关jar包</li><li>创建Jackson核心对象 ObjectMapper</li><li>调用ObjectMapper的相关方法进行转换</li></ul><ol><li><p><strong>转换方法：</strong></p><ul><li><strong><code>writeValue(参数1，obj)</code></strong><blockquote><p>参数1：</p><ul><li><strong><code>File</code></strong>：将obj对象转换为JSON字符串，并保存到指定的文件中</li><li><strong><code>Writer</code></strong>：将obj对象转换为JSON字符串，并将json数据填充到字符输出流中</li><li><strong><code>OutputStream</code></strong>：将obj对象转换为JSON字符串，并将json数据填充到字节输出流中</li></ul></blockquote></li><li><strong><code>writeValueAsString(obj)</code></strong>：将对象转为json字符串</li></ul></li><li><p><strong>注解：</strong></p><ul><li><p><strong><code>@JsonIgnore</code></strong>：排除属性。</p></li><li><p><strong><code>@JsonFormat</code></strong>：属性值得格式化</p><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonFormat</span>(pattern = <span class="string">"yyyy-MM-dd"</span>)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p><strong>复杂java对象转换</strong></p><ul><li><strong><code>List</code></strong>：数组</li><li><strong><code>Map</code></strong>：对象格式一致</li></ul></li></ol></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      json多用于存储和交换文本信息的语法，原来进行数据的传输
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十三章 1.AJAX</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/13_1%20AJAX.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-Java/JavaWeb/13_1%20AJAX.html</id>
    <published>2019-08-28T01:47:53.000Z</published>
    <updated>2019-09-05T15:26:53.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="13-1-AJAX"><a href="#13-1-AJAX" class="headerlink" title="13.1 AJAX"></a>13.1 AJAX</h1><h2 id="13-1-1-概念"><a href="#13-1-1-概念" class="headerlink" title="13.1.1 概念"></a>13.1.1 概念</h2><p><strong>ASynchronous JavaScript And XML</strong>===&gt;异步的JavaScript和XML</p><p><strong>异步和同步</strong>：客户端和服务器端相互通信的基础上</p><p><img src="//cdn.foreversfj.com/image/blog/20190905/AXpIP1AovaFe.png!blog" alt=""></p><ul><li>客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。</li><li>客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。</li></ul><p>&emsp;&emsp;<strong>Ajax</strong>是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。</p><p>&emsp;&emsp;通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p><p>&emsp;&emsp;传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p><p>&emsp;&emsp;提升用户的体验</p><h2 id="13-1-2-实现方式"><a href="#13-1-2-实现方式" class="headerlink" title="13.1.2 实现方式"></a>13.1.2 实现方式</h2><h3 id="原生的JS实现方式"><a href="#原生的JS实现方式" class="headerlink" title="原生的JS实现方式"></a>原生的JS实现方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建核心对象</span></span><br><span class="line"><span class="keyword">var</span> xmlhttp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">&#123;<span class="comment">// code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="comment">// code for IE6, IE5</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2. 建立连接</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参数：</span></span><br><span class="line"><span class="comment"> *  1. 请求方式：GET、POST</span></span><br><span class="line"><span class="comment"> *    * get方式，请求参数在URL后边拼接。send方法为空参</span></span><br><span class="line"><span class="comment"> *    * post方式，请求参数在send方法中定义</span></span><br><span class="line"><span class="comment"> *  2. 请求的URL：</span></span><br><span class="line"><span class="comment"> *  3. 同步或异步请求：true（异步）或 false（同步）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajaxServlet?username=tom"</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//3.发送请求</span></span><br><span class="line">xmlhttp.send();</span><br><span class="line"><span class="comment">//4.接受并处理来自服务器的响应结果</span></span><br><span class="line"><span class="comment">//获取方式 ：xmlhttp.responseText</span></span><br><span class="line"><span class="comment">//什么时候获取？当服务器响应成功后再获取</span></span><br><span class="line"><span class="comment">//当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。</span></span><br><span class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//判断readyState就绪状态是否为4，判断status响应状态码是否为200</span></span><br><span class="line">    <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取服务器的响应结果</span></span><br><span class="line">        <span class="keyword">var</span> responseText = xmlhttp.responseText;</span><br><span class="line">        alert(responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JQeury实现方式"><a href="#JQeury实现方式" class="headerlink" title="JQeury实现方式"></a>JQeury实现方式</h3><h4 id="ajax"><a href="#ajax" class="headerlink" title="$.ajax()"></a><code>$.ajax()</code></h4><ul><li><strong>语法</strong>：<code>$.ajax({键值对})</code>;</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用$.ajax()发送异步请求</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"ajaxServlet1111"</span> , <span class="comment">// 请求路径</span></span><br><span class="line">    type:<span class="string">"POST"</span> , <span class="comment">//请求方式</span></span><br><span class="line">    <span class="comment">//data: "username=jack&amp;age=23",//请求参数</span></span><br><span class="line">    data:&#123;<span class="string">"username"</span>:<span class="string">"jack"</span>,<span class="string">"age"</span>:<span class="number">23</span>&#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        alert(data);</span><br><span class="line">    &#125;,<span class="comment">//响应成功后的回调函数</span></span><br><span class="line">    error:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">"出错啦..."</span>)</span><br><span class="line">    &#125;,<span class="comment">//表示如果请求响应出现错误，会执行的回调函数</span></span><br><span class="line">    dataType:<span class="string">"text"</span><span class="comment">//设置接受到的响应数据的格式</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="get-：发送get请求"><a href="#get-：发送get请求" class="headerlink" title="$.get()：发送get请求"></a><code>$.get()</code>：发送get请求</h4><ul><li><strong>语法</strong>：<code>$.get(url, [data], [callback], [type])</code></li><li><strong>参数</strong>：<ul><li><strong><code>url</code></strong>：请求路径</li><li><strong><code>data</code></strong>：请求参数</li><li><strong><code>callback</code></strong>：回调函数</li><li><strong><code>type</code></strong>：响应结果的类型</li></ul></li></ul><h4 id="post-：发送post请求"><a href="#post-：发送post请求" class="headerlink" title="$.post()：发送post请求"></a><code>$.post()</code>：发送post请求</h4><ul><li><strong>语法</strong>：<code>$.post(url, [data], [callback], [type])</code></li><li><strong>参数</strong>：<ul><li><strong><code>url</code></strong>：请求路径</li><li><strong><code>data</code></strong>：请求参数</li><li><strong><code>callback</code></strong>：回调函数</li><li><strong><code>type</code></strong>：响应结果的类型</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十二章 4.案例</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_4%20JQuery%E6%A1%88%E4%BE%8B.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_4%20JQuery%E6%A1%88%E4%BE%8B.html</id>
    <published>2019-08-27T11:38:28.000Z</published>
    <updated>2019-09-05T15:24:55.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="12-4-案例"><a href="#12-4-案例" class="headerlink" title="12.4 案例"></a>12.4 案例</h1><h2 id="12-4-1-广告显示和隐藏"><a href="#12-4-1-广告显示和隐藏" class="headerlink" title="12.4.1 广告显示和隐藏"></a>12.4.1 广告显示和隐藏</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>广告的自动显示与隐藏<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#content</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">height</span>:<span class="number">500px</span>;<span class="attribute">background</span>:<span class="number">#999</span>&#125;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入jquery--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.3.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">            /**</span><br><span class="line">             * 需求：</span><br><span class="line">             *   1. 当页面加载完，3秒后。自动显示广告</span><br><span class="line">             *   2. 广告显示5秒后，自动消失。</span><br><span class="line">             * 分析：</span><br><span class="line">             *   1. 使用定时器来完成。setTimeout (执行一次定时器)</span><br><span class="line">             *   2. 分析发现JQuery的显示和隐藏动画效果其实就是控制display</span><br><span class="line">             *   3. 使用  show/hide方法来完成广告的显示</span><br><span class="line">             */</span><br><span class="line"><span class="actionscript">            <span class="comment">//入口函数，在页面加载完成之后，定义定时器，调用这两个方法</span></span></span><br><span class="line"><span class="javascript">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//定义定时器，调用adShow方法 3秒后执行一次</span></span></span><br><span class="line">                setTimeout(adShow,3000);</span><br><span class="line"><span class="actionscript">                <span class="comment">//定义定时器，调用adHide方法，8秒后执行一次</span></span></span><br><span class="line">                setTimeout(adHide,8000);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//显示广告</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">adShow</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//获取广告div，调用显示方法</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#ad"</span>).show(<span class="string">"slow"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//隐藏广告</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">adHide</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//获取广告div，调用隐藏方法</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#ad"</span>).hide(<span class="string">"slow"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 整体的DIV --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 广告DIV --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ad"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"width:100%"</span> <span class="attr">src</span>=<span class="string">"../img/adv.jpg"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 下方正文部分 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">                正文部分</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-4-2-抽奖"><a href="#12-4-2-抽奖" class="headerlink" title="12.4.2 抽奖"></a>12.4.2 抽奖</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>jquery案例之抽奖<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../js/jquery-3.3.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">'javascript'</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            /**</span><br><span class="line">             * 分析：</span><br><span class="line">             * 1. 给开始按钮绑定单击事件</span><br><span class="line">             *  1.1 定义循环定时器</span><br><span class="line">             *  1.2 切换小相框的src属性</span><br><span class="line">             *    * 定义数组，存放图片资源路径</span><br><span class="line">             *    * 生成随机数。数组索引</span><br><span class="line">             * 2. 给结束按钮绑定单击事件</span><br><span class="line">             *  2.1 停止定时器</span><br><span class="line">             *  2.2 给大相框设置src属性</span><br><span class="line">             */</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> imgs = [<span class="string">"../img/man00.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man01.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man02.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man03.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man04.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man05.jpg"</span>,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"../img/man06.jpg"</span>,</span></span><br><span class="line">                       ];</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> startId;<span class="comment">//开始定时器的id</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> index;<span class="comment">//随机角标</span></span></span><br><span class="line"><span class="javascript">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//处理按钮是否可以使用的效果</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//1. 给开始按钮绑定单击事件</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#startID"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 1.1 定义循环定时器 20毫秒执行一次</span></span></span><br><span class="line"><span class="actionscript">                    startId = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//处理按钮是否可以使用的效果</span></span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//1.2生成随机角标 0-6</span></span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//0.000--0.999 --&gt; * 7 --&gt; 0.0-----6.9999</span></span></span><br><span class="line"><span class="javascript">                        index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">7</span>);</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">//1.3设置小相框的src属性</span></span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"#img1ID"</span>).prop(<span class="string">"src"</span>,imgs[index]);</span></span><br><span class="line">                    &#125;,20);</span><br><span class="line">                &#125;);</span><br><span class="line"><span class="actionscript">                <span class="comment">//2. 给结束按钮绑定单击事件</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#stopID"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//处理按钮是否可以使用的效果</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#startID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#stopID"</span>).prop(<span class="string">"disabled"</span>,<span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 1.1 停止定时器</span></span></span><br><span class="line">                    clearInterval(startId);</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 1.2 给大相框设置src属性</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#img2ID"</span>).prop(<span class="string">"src"</span>,imgs[index]).hide();</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//显示1秒之后</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#img2ID"</span>).show(<span class="number">1000</span>);</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小像框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-style:dotted;width:160px;height:100px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img1ID"</span> <span class="attr">src</span>=<span class="string">"../img/man00.jpg"</span>             <span class="attr">style</span>=<span class="string">"width:160px;height:100px"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 大像框 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">             <span class="attr">style</span>=<span class="string">"border-style:double;width:800px;height:500px;position:absolute;left:500px;top:10px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img2ID"</span> <span class="attr">src</span>=<span class="string">"../img/man00.jpg"</span> <span class="attr">width</span>=<span class="string">"800px"</span> <span class="attr">height</span>=<span class="string">"500px"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开始按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">               <span class="attr">id</span>=<span class="string">"startID"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">type</span>=<span class="string">"button"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">value</span>=<span class="string">"点击开始"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">"width:150px;height:150px;font-size:22px"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 停止按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">               <span class="attr">id</span>=<span class="string">"stopID"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">type</span>=<span class="string">"button"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">value</span>=<span class="string">"点击停止"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">"width:150px;height:150px;font-size:22px"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="插件：增强JQuery的功能"><a href="#插件：增强JQuery的功能" class="headerlink" title="插件：增强JQuery的功能"></a>插件：增强JQuery的功能</h2><ol><li><strong><code>$.fn.extend(object)</code></strong><ul><li>增强通过Jquery获取的对象的功能  <code>$(&quot;#id&quot;)</code></li></ul></li><li><strong><code>$.extend(object)</code></strong><ul><li>增强JQeury对象自身的功能 <code>$/jQuery</code></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      本节展示使用JQuery的两个案例
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十二章 3.JQuery 高级</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_3%20JQuery%20%E9%AB%98%E7%BA%A7.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_3%20JQuery%20%E9%AB%98%E7%BA%A7.html</id>
    <published>2019-08-27T03:12:53.000Z</published>
    <updated>2019-09-05T15:24:31.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="12-3-JQuery-高级"><a href="#12-3-JQuery-高级" class="headerlink" title="12.3 JQuery 高级"></a>12.3 JQuery 高级</h1><h2 id="12-3-1-动画"><a href="#12-3-1-动画" class="headerlink" title="12.3.1 动画"></a>12.3.1 动画</h2><h3 id="三种方式显示和隐藏元素"><a href="#三种方式显示和隐藏元素" class="headerlink" title="三种方式显示和隐藏元素"></a>三种方式显示和隐藏元素</h3><ul><li><p>默认显示和隐藏方式</p><ul><li><strong><code>show([speed,[easing],[fn]])</code></strong></li><li><strong><code>hide([speed,[easing],[fn]])</code></strong></li><li><strong><code>toggle([speed],[easing],[fn])</code></strong></li></ul></li><li><p>滑动显示和隐藏方式</p><ul><li><strong><code>slideDown([speed],[easing],[fn])</code></strong></li><li><strong><code>slideUp([speed,[easing],[fn]])</code></strong></li><li><strong><code>slideToggle([speed],[easing],[fn])</code></strong></li></ul></li><li><p>淡入淡出显示和隐藏方式</p><ul><li><strong><code>fadeIn([speed],[easing],[fn])</code></strong></li><li><strong><code>fadeOut([speed],[easing],[fn])</code></strong></li><li><strong><code>fadeToggle([speed,[easing],[fn]])</code></strong></li></ul><blockquote><ol><li><strong><code>speed</code></strong>：动画的速度。三个预定义的值(“<code>slow</code>“，”<code>normal</code>“，”<code>fast</code>“)或表示动画时长的毫秒数值(如：1000)</li><li><strong><code>easing</code></strong>：用来指定切换效果，默认是”<code>swing</code>“，可用参数”<code>linear</code>“<ul><li><strong><code>swing</code></strong>：动画执行时效果是 先慢，中间快，最后又慢</li><li><strong><code>linear</code></strong>：动画执行时速度是匀速的</li></ul></li><li><strong><code>fn</code></strong>：在动画完成时执行的函数，每个元素执行一次。</li></ol></blockquote></li></ul><h2 id="12-3-2-遍历"><a href="#12-3-2-遍历" class="headerlink" title="12.3.2 遍历"></a>12.3.2 遍历</h2><h3 id="js的遍历方式"><a href="#js的遍历方式" class="headerlink" title="js的遍历方式"></a>js的遍历方式</h3><ul><li>for(初始化值;循环结束条件;步长)</li></ul><h3 id="jq的遍历方式"><a href="#jq的遍历方式" class="headerlink" title="jq的遍历方式"></a>jq的遍历方式</h3><ul><li><p><strong><code>jq对象.each(callback)</code></strong></p><ul><li><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jquery对象.each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong><code>index</code></strong>：就是元素在集合中的索引</li><li><strong><code>element</code></strong>：就是集合中的每一个元素对象</li><li><strong><code>this</code></strong>：集合中的每一个元素对象</li></ul></li><li><p>回调函数返回值：</p><ul><li><strong><code>true</code></strong>：如果当前function返回为false，则结束循环(break)。</li><li><strong><code>false</code></strong>：如果当前function返回为true，则结束本次循环，继续下次循环(continue)</li></ul></li></ul></li><li><p><strong><code>$.each(object, [callback])</code></strong></p></li><li><p><strong><code>for..of</code></strong>：jquery 3.0 版本之后提供的方式</p><ul><li>for(元素对象 of 容器对象)</li></ul></li></ul><h2 id="12-3-3-事件绑定"><a href="#12-3-3-事件绑定" class="headerlink" title="12.3.3 事件绑定"></a>12.3.3 事件绑定</h2><ol><li><p>jquery标准的绑定方式</p><ul><li><code>jq对象.事件方法(回调函数)</code>；</li><li>注：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。<ul><li><code>表单对象.submit()</code>；//让表单提交</li></ul></li></ul></li><li><p>on绑定事件/off解除绑定</p><ul><li><code>jq对象.on(&quot;事件名称&quot;,回调函数)</code></li><li><code>jq对象.off(&quot;事件名称&quot;)</code><ul><li>如果off方法不传递任何参数，则将组件上的所有事件全部解绑</li></ul></li></ul></li><li><p>事件切换：<code>toggle</code></p><ul><li><p><strong><code>jq对象.toggle(fn1,fn2...)</code></strong></p><ul><li>当单击jq对象对应的组件后，会执行fn1.第二次点击会执行fn2…..</li></ul></li><li><p>注意：1.9版本<code>toggle()</code>方法删除,<code>jQuery Migrate</code>（迁移）插件可以恢复此功能。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-migrate-1.0.0.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      本节简述JQuery的三种普遍应用方法
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
      <category term="JQuery" scheme="https://blog.foreversfj.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十二章 2.DOM操作</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_2%20DOM%E6%93%8D%E4%BD%9C.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_2%20DOM%E6%93%8D%E4%BD%9C.html</id>
    <published>2019-08-27T02:12:01.000Z</published>
    <updated>2019-09-05T15:22:12.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="12-2-DOM操作"><a href="#12-2-DOM操作" class="headerlink" title="12.2 DOM操作"></a>12.2 DOM操作</h1><h2 id="12-2-1-内容操作"><a href="#12-2-1-内容操作" class="headerlink" title="12.2.1  内容操作"></a>12.2.1  内容操作</h2><ul><li><p><strong><code>html()</code></strong>：获取/设置元素的标签体内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>  --&gt; <span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code>text()</code></strong>：获取/设置元素的标签体纯文本内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> --&gt; 内容</span><br></pre></td></tr></table></figure></li><li><p><strong><code>val()</code></strong>： 获取/设置元素的value属性值</p></li></ul><h2 id="12-2-2-属性操作"><a href="#12-2-2-属性操作" class="headerlink" title="12.2.2 属性操作"></a>12.2.2 属性操作</h2><ul><li>通用属性操作<ul><li><strong><code>attr()</code></strong>：获取/设置元素的属性</li><li><strong><code>removeAttr()</code></strong>：删除属性</li><li><strong><code>prop()</code></strong>：获取/设置元素的属性</li><li><strong><code>removeProp()</code></strong>：删除属性<blockquote><p><code>attr</code>和<code>prop</code>区别？<br>&emsp;&emsp;1、如果操作的是元素的固有属性，则建议使用prop<br>&emsp;&emsp;2、如果操作的是元素自定义的属性，则建议使用attr</p></blockquote></li></ul></li><li>对class属性操作<ul><li><strong><code>addClass()</code></strong>：添加class属性值</li><li><strong><code>removeClass()</code></strong>：删除class属性值</li><li><strong><code>toggleClass()</code></strong>：切换class属性<blockquote><p><strong><code>toggleClass(&quot;one&quot;)：</code></strong><br>&emsp;&emsp;判断如果元素对象上存在<code>class=&quot;one&quot;</code>，则将属性值one删除掉。  如果元素对象上不存在<code>class=&quot;one&quot;</code>，则添加</p></blockquote></li><li>**<code>css()</code></li></ul></li></ul><h2 id="12-2-3-CRUD操作"><a href="#12-2-3-CRUD操作" class="headerlink" title="12.2.3 CRUD操作"></a>12.2.3 CRUD操作</h2><ul><li><strong><code>append()</code></strong>：父元素将子元素追加到末尾<ul><li><strong><code>对象1.append(对象2)</code></strong>：将对象2添加到对象1元素内部，并且在末尾</li></ul></li><li><strong><code>prepend()</code></strong>：父元素将子元素追加到开头<ul><li><strong><code>对象1.prepend(对象2)</code></strong>：将对象2添加到对象1元素内部，并且在开头</li></ul></li><li>**<code>appendTo()</code><ul><li><strong><code>对象1.appendTo(对象2)</code></strong>：将对象1添加到对象2内部，并且在末尾</li></ul></li><li><strong><code>prependTo()</code></strong><ul><li><strong><code>对象1.prependTo(对象2)</code></strong>：将对象1添加到对象2内部，并且在开头</li></ul></li><li><strong><code>after()</code></strong>：添加元素到元素后边<ul><li><strong><code>对象1.after(对象2)</code></strong>： 将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li><strong><code>before()</code></strong>：添加元素到元素前边<ul><li><strong><code>对象1.before(对象2)</code></strong>： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li><strong><code>insertAfter()</code></strong><ul><li><strong><code>对象1.insertAfter(对象2)</code></strong>：将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li><strong><code>insertBefore()</code></strong><ul><li><strong><code>对象1.insertBefore(对象2)</code></strong>： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li><strong><code>remove()</code></strong>：移除元素<ul><li><strong><code>对象.remove()</code></strong>：将对象删除掉</li></ul></li><li><strong><code>empty()</code></strong>：清空元素的所有后代元素。<ul><li><strong><code>对象.empty()</code></strong>：将对象的后代元素全部清空，但是保留当前对象以及其属性节点</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      使用JQuery内置的DOM操作，对html内容进行文本操作
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
      <category term="JQuery" scheme="https://blog.foreversfj.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十二章 1.JQuery 基础</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_1%20JQuery%20%E5%9F%BA%E7%A1%80.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/12_1%20JQuery%20%E5%9F%BA%E7%A1%80.html</id>
    <published>2019-08-27T01:31:21.000Z</published>
    <updated>2019-09-05T15:20:14.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="12-1-JQuery-基础"><a href="#12-1-JQuery-基础" class="headerlink" title="12.1 JQuery 基础"></a>12.1 JQuery 基础</h1><h2 id="12-1-1-概念及入门"><a href="#12-1-1-概念及入门" class="headerlink" title="12.1.1 概念及入门"></a>12.1.1 概念及入门</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><strong>一个JavaScript框架。简化JS开发</strong></p><p>&emsp;&emsp;jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优    化HTML文档操作、事件处理、动画设计和Ajax交互。<br>&emsp;&emsp;<strong>JavaScript框架：</strong>本质上就是一些js文件，封装了js的原生代码而已</p><h3 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h3><ol><li><p>下载JQuery，目前jQuery有三个大版本：</p><ul><li><strong><code>1.x</code></strong>：兼容ie678,使用最为广泛的，官方只做BUG维护，功能不再新增。因此一般项目来说，使用1.x版本就可以了。目前最终版本为：1.12.4 (2016年5月20日)。</li><li><strong><code>2.x</code></strong>：不兼容ie678，很少有人使用，官方只做BUG维护，功能不再新增。如果不考虑兼容低版本的浏览器可以使用2.x。最终版本：2.2.4 (2016年5月20日)。</li><li><strong><code>3.x</code></strong>：不兼容ie678，只支持最新的浏览器。除非特殊要求，一般不会使用3.x版本的，很多老的jQuery插件不支持这个版本。目前该版本是官方主要更新维护的版本。</li></ul><blockquote><p><strong><code>jquery-xxx.js</code> 与<code>jquery-xxx.min.js</code>区别：</strong><br>&emsp;&emsp;1、<strong><code>jquery-xxx.js</code></strong>：开发版本。给程序员看的，有良好的缩进和注释。体积大一些<br>&emsp;&emsp;2、<strong><code>jquery-xxx.min.js</code></strong>：生产版本。程序中使用，没有缩进。体积小一些。程序加载更快</p></blockquote></li><li><p>导入JQuery的js文件：导入min.js文件</p></li><li><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div1 = $(<span class="string">"#div1"</span>);</span><br><span class="line">alert(div1.html());</span><br></pre></td></tr></table></figure></li></ol><h4 id="JQuery对象和JS对象区别与转换"><a href="#JQuery对象和JS对象区别与转换" class="headerlink" title="JQuery对象和JS对象区别与转换"></a>JQuery对象和JS对象区别与转换</h4><ol><li>JQuery对象在操作时，更加方便。</li><li>JQuery对象和js对象方法不通用的.</li><li>两者相互转换<blockquote><p>jq ===&gt; js：<code>jq对象[索引]</code>或者<code>jq对象.get(索引)</code><br>js ===&gt; jq：<code>$(js对象)</code></p></blockquote></li></ol><h2 id="12-1-2-选择器"><a href="#12-1-2-选择器" class="headerlink" title="12.1.2 选择器"></a>12.1.2 选择器</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><ul><li><strong>选择器：</strong>筛选具有相似特征的元素(标签)</li></ul><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ol><li><p>事件绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取b1按钮</span></span><br><span class="line">$(<span class="string">"#b1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"abc"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>入口函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><strong><code>window.onload</code>  和 <code>$(function)</code>区别</strong><br>&emsp;&emsp;1、<strong><code>window.onload</code></strong> 只能定义一次，如果定义多次，后边的会将前边的覆盖掉<br>&emsp;&emsp;2、<strong><code>$(function)</code></strong> 可以定义多次的。</p></blockquote></li><li><p>样式控制：css方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// $("#div1").css("background-color","red");</span></span><br><span class="line">$(<span class="string">"#div1"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"pink"</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="①-基本选择器"><a href="#①-基本选择器" class="headerlink" title="① 基本选择器"></a>① 基本选择器</h4><ul><li>标签选择器（元素选择器）<ul><li>语法：<code>$(&quot;html标签名&quot;)</code>获得所有匹配标签名称的元素</li></ul></li><li>id选择器 <ul><li>语法：<code>$(&quot;#id的属性值&quot;)</code>获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法：<code>$(&quot;.class的属性值&quot;)</code>获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器<ul><li>语法：<code>$(&quot;选择器1,选择器2....&quot;)</code>获取多个选择器选中的所有元素</li></ul></li></ul><h4 id="②-层级选择器"><a href="#②-层级选择器" class="headerlink" title="② 层级选择器"></a>② 层级选择器</h4><ul><li>后代选择器<ul><li>语法：<code>$(&quot;A B &quot;)</code>选择A元素内部的所有B元素</li></ul></li><li>子选择器<ul><li>语法：<code>$(&quot;A &gt; B&quot;)</code>选择A元素内部的所有B子元素</li></ul></li></ul><h4 id="③-属性选择器"><a href="#③-属性选择器" class="headerlink" title="③ 属性选择器"></a>③ 属性选择器</h4><ul><li>属性名称选择器<ul><li>语法：<code>$(&quot;A[属性名]&quot;)</code>包含指定属性的选择器</li></ul></li><li>属性选择器<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;]&quot;)</code>包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器<ul><li>语法：<code>$(&quot;A[属性名=&#39;值&#39;][]...&quot;)</code>包含多个属性条件的选择器</li></ul></li></ul><h4 id="④-过滤选择器"><a href="#④-过滤选择器" class="headerlink" title="④ 过滤选择器"></a>④ 过滤选择器</h4><ul><li>首元素选择器<ul><li>语法：<code>:first</code>获得选择的元素中的第一个元素</li></ul></li><li>尾元素选择器<ul><li>语法：<code>:last</code>获得选择的元素中的最后一个元素</li></ul></li><li>非元素选择器<ul><li>语法：<code>:not(selector)</code>不包括指定内容的元素</li></ul></li><li>偶数选择器<ul><li>语法：<code>:even</code>偶数，从 0 开始计数</li></ul></li><li>奇数选择器<ul><li>语法：<code>:odd</code>奇数，从 0 开始计数</li></ul></li><li>等于索引选择器<ul><li>语法：<code>:eq(index)</code>指定索引元素</li></ul></li><li>大于索引选择器<ul><li>语法：<code>:gt(index)</code>大于指定索引元素</li></ul></li><li>小于索引选择器<ul><li>语法：<code>:lt(index)</code>小于指定索引元素</li></ul></li><li>标题选择器<ul><li>语法：<code>:header</code>获得标题（h1~h6）元素，固定写法</li></ul></li></ul><h4 id="⑤-表单过滤选择器"><a href="#⑤-表单过滤选择器" class="headerlink" title="⑤ 表单过滤选择器"></a>⑤ 表单过滤选择器</h4><ul><li>可用元素选择器 <ul><li>语法：<code>:enabled</code>获得可用元素</li></ul></li><li>不可用元素选择器<ul><li>语法：<code>:disabled</code>获得不可用元素</li></ul></li><li>选中选择器 <ul><li>语法：<code>:checked</code>获得单选/复选框选中的元素</li></ul></li><li>选中选择器 <ul><li>语法：<code>:selected</code>获得下拉框选中的元素</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
      <category term="JQuery" scheme="https://blog.foreversfj.com/tags/JQuery/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十一章 4.Session</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/11_4%20Session.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-27-Java/JavaWeb/11_4%20Session.html</id>
    <published>2019-08-27T00:28:37.000Z</published>
    <updated>2019-09-05T15:15:30.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11-4-Session"><a href="#11-4-Session" class="headerlink" title="11.4 Session"></a>11.4 Session</h1><h2 id="11-4-1-入门"><a href="#11-4-1-入门" class="headerlink" title="11.4.1 入门"></a>11.4.1 入门</h2><ol><li><p><strong>概念</strong>：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。<code>HttpSession</code></p></li><li><p><strong>快速入门</strong>：</p><ol><li><p>获取<code>HttpSession</code>对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure></li><li><p>使用<code>HttpSession</code>对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Object <span class="title">getAttribute</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAttribute</span><span class="params">(String name, Object value)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">removeAttribute</span><span class="params">(String name)</span></span>;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="11-4-2-细节"><a href="#11-4-2-细节" class="headerlink" title="11.4.2 细节"></a>11.4.2 细节</h2><ol><li><p>当客户端关闭后，服务器不关闭，两次获取session是否为同一个？</p><ul><li><p>默认情况下。不是。</p></li><li><p>如果需要相同，则可以创建Cookie,键为JSESSIONID，设置最大存活时间，让cookie持久化保存。</p><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cookie c = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>,session.getId());</span><br><span class="line">c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">response.addCookie(c);</span><br></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>客户端不关闭，服务器关闭后，两次获取的session是同一个吗？</p><ul><li><p>不是同一个，但是要确保数据不丢失。tomcat自动完成以下工作</p><ul><li><p>session的钝化：</p><blockquote><p>在服务器正常关闭之前，将session对象系列化到硬盘上</p></blockquote></li><li><p>session的活化：</p><blockquote><p>在服务器启动后，将session文件转化为内存中的session对象即可。</p></blockquote></li></ul></li></ul></li><li><p>session什么时候被销毁？</p><ul><li><p>服务器关闭</p></li><li><p>session对象调用<code>invalidate()</code>。</p></li><li><p>session默认失效时间 30分钟<br>选择性配置修改    </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><p><img src="//cdn.foreversfj.com/image/blog/20190905/9KAX6tQcbhSV.png!blog" alt=""></p><h2 id="11-4-3-session的特点"><a href="#11-4-3-session的特点" class="headerlink" title="11.4.3 session的特点"></a>11.4.3 session的特点</h2><ol><li>session用于存储一次会话的多次请求的数据，存在服务器端<ol start="2"><li>session可以存储任意类型，任意大小的数据</li></ol></li></ol><ul><li><strong>session与Cookie的区别：</strong><ol><li>session存储数据在服务器端，Cookie在客户端</li><li>session没有数据大小限制，Cookie有</li><li>session数据安全，Cookie相对于不安全</li></ol></li></ul><h2 id="案例：验证码"><a href="#案例：验证码" class="headerlink" title="案例：验证码"></a><em>案例：验证码</em></h2><p>案例需求：</p><ol><li>访问带有验证码的登录页面login.jsp</li><li>用户输入用户名，密码以及验证码。<ul><li>如果用户名和密码输入有误，跳转登录页面，提示:用户名或密码错误</li><li>如果验证码输入有误，跳转登录页面，提示：验证码错误</li><li>如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      Session是服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十一章 3.JSP：入门学习</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_3%20JSP.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_3%20JSP.html</id>
    <published>2019-08-26T12:18:50.000Z</published>
    <updated>2019-09-05T15:13:26.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11-3-JSP：入门学习"><a href="#11-3-JSP：入门学习" class="headerlink" title="11.3 JSP：入门学习"></a>11.3 JSP：入门学习</h1><h2 id="11-3-1-概念"><a href="#11-3-1-概念" class="headerlink" title="11.3.1 概念"></a>11.3.1 概念</h2><ul><li><i>Java Server Pages</i>： java服务器端页面<ul><li>可以理解为：一个特殊的页面，其中既可以指定定义html标签，又可以定义java代码</li><li>用于简化书写！！！</li></ul></li></ul><h2 id="11-3-2-原理"><a href="#11-3-2-原理" class="headerlink" title="11.3.2 原理"></a>11.3.2 原理</h2><ul><li>JSP本质上就是一个Servlet</li></ul><p><img src="//cdn.foreversfj.com/image/blog/20190905/U7DOKinnVn8N.png!blog" alt=""></p><ul><li>JSP的脚本：JSP定义Java代码的方式<ol><li><strong><code>&lt;%  代码 %&gt;</code></strong>：定义的java代码，在service方法中。service方法中可以定义什么，该脚本中就可以定义什么。</li><li><strong><code>&lt;%! 代码 %&gt;</code></strong>：定义的java代码，在jsp转换后的java类的成员位置。</li><li><strong><code>&lt;%= 代码 %&gt;</code></strong>：定义的java代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么。</li></ol></li><li>JSP的内置对象<ul><li>在jsp页面中不需要获取和创建，可以直接使用的对象</li><li>jsp一共有9个内置对象。<ul><li><strong><code>request</code></strong></li><li><strong><code>response</code></strong></li><li><strong><code>out</code></strong>：字符输出流对象。可以将数据输出到页面上。和<code>response.getWriter()</code>类似<blockquote><p><strong><code>response.getWriter()</code>和<code>out.write()</code>的区别：</strong></p><ul><li>在tomcat服务器真正给客户端做出响应之前，会先找response缓冲区数据，再找out缓冲区数据。</li><li><strong><code>response.getWriter()</code></strong>数据输出永远在<code>out.write()</code>之前 </li></ul></blockquote></li></ul></li></ul></li></ul><h2 id="案例-改造Cookie案例"><a href="#案例-改造Cookie案例" class="headerlink" title="案例:改造Cookie案例"></a><em>案例:改造Cookie案例</em></h2><p><img src="//cdn.foreversfj.com/image/blog/20190905/7RSn947JJjYn.png!blog" alt=""></p>]]></content>
    
    <summary type="html">
    
      本节介绍JSP的入门学习内容
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十一章 2.Cookie案例</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_2%20Cookie%E6%A1%88%E4%BE%8B.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_2%20Cookie%E6%A1%88%E4%BE%8B.html</id>
    <published>2019-08-26T11:11:07.000Z</published>
    <updated>2019-09-05T15:11:22.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11-2-案例：记住上一次访问时间"><a href="#11-2-案例：记住上一次访问时间" class="headerlink" title="11.2 案例：记住上一次访问时间"></a>11.2 案例：记住上一次访问时间</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>访问一个Servlet，如果是第一次访问，则提示：您好，欢迎您首次访问。</li><li>如果不是第一次访问，则提示：欢迎回来，您上次访问时间为:显示时间字符串</li></ol><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol><li><p>可以采用Cookie来完成</p></li><li><p>在服务器中的Servlet判断是否有一个名为lastTime的cookie</p><ol><li>有：不是第一次访问<ol><li>响应数据：<code>欢迎回来，您上次访问时间为:2018年6月10日11:50:20</code></li><li>写回Cookie：<code>lastTime=2018年6月10日11:50:01</code></li></ol></li><li>没有：是第一次访问<ol><li>响应数据：<code>您好，欢迎您首次访问</code></li><li>写回Cookie：<code>lastTime=2018年6月10日11:50:01</code></li></ol></li></ol><p><img src="//cdn.foreversfj.com/image/blog/20190905/eQa3FcegjwOU.png!blog" alt=""></p></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.foreversfj.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/cookieTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse </span></span></span><br><span class="line"><span class="function"><span class="params">                          response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置响应的消息体的数据格式以及编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取所有Cookie</span></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;<span class="comment">//没有cookie为lastTime</span></span><br><span class="line">        <span class="comment">//2.遍历cookie数组</span></span><br><span class="line">        <span class="keyword">if</span>(cookies != <span class="keyword">null</span> &amp;&amp; cookies.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="comment">//3.获取cookie的名称</span></span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                <span class="comment">//4.判断名称是否是：lastTime</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="string">"lastTime"</span>.equals(name))&#123;</span><br><span class="line">                    <span class="comment">//有该Cookie，不是第一次访问</span></span><br><span class="line">                    flag = <span class="keyword">true</span>;<span class="comment">//有lastTime的cookie</span></span><br><span class="line">                    <span class="comment">//设置Cookie的value</span></span><br><span class="line">                    <span class="comment">//获取当前时间的字符串，重新设置Cookie的值，重新发送cookie</span></span><br><span class="line">                    Date date  = <span class="keyword">new</span> Date();</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">                    String str_date = sdf.format(date);</span><br><span class="line">                    System.out.println(<span class="string">"编码前："</span>+str_date);</span><br><span class="line">                    <span class="comment">//URL编码</span></span><br><span class="line">                    str_date = URLEncoder.encode(str_date,<span class="string">"utf-8"</span>);</span><br><span class="line">                    System.out.println(<span class="string">"编码后："</span>+str_date);</span><br><span class="line">                    cookie.setValue(str_date);</span><br><span class="line">                    <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">                    cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);<span class="comment">//一个月</span></span><br><span class="line">                    response.addCookie(cookie);</span><br><span class="line">                    <span class="comment">//响应数据</span></span><br><span class="line">                    <span class="comment">//获取Cookie的value，时间</span></span><br><span class="line">                    String value = cookie.getValue();</span><br><span class="line">                    System.out.println(<span class="string">"解码前："</span>+value);</span><br><span class="line">                    <span class="comment">//URL解码：</span></span><br><span class="line">                    value = URLDecoder.decode(value,<span class="string">"utf-8"</span>);</span><br><span class="line">                    System.out.println(<span class="string">"解码后："</span>+value);</span><br><span class="line">                    response.getWriter().write(<span class="string">"&lt;h1&gt;欢迎回来，您上次访问时间为:"</span>+value+<span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cookies == <span class="keyword">null</span> || cookies.length == <span class="number">0</span> || flag == <span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="comment">//没有，第一次访问</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置Cookie的value</span></span><br><span class="line">            <span class="comment">//获取当前时间的字符串，重新设置Cookie的值，重新发送cookie</span></span><br><span class="line">            Date date  = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">            String str_date = sdf.format(date);</span><br><span class="line">            System.out.println(<span class="string">"编码前："</span>+str_date);</span><br><span class="line">            <span class="comment">//URL编码</span></span><br><span class="line">            str_date = URLEncoder.encode(str_date,<span class="string">"utf-8"</span>);</span><br><span class="line">            System.out.println(<span class="string">"编码后："</span>+str_date);</span><br><span class="line"></span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lastTime"</span>,str_date);</span><br><span class="line">            <span class="comment">//设置cookie的存活时间</span></span><br><span class="line">            cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);<span class="comment">//一个月</span></span><br><span class="line">            response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">            response.getWriter().write(<span class="string">"&lt;h1&gt;您好，欢迎您首次访问&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse </span></span></span><br><span class="line"><span class="function"><span class="params">                         response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      案例：记住上一次访问时间
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十一章 1.Cookie入门</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_1%20Cookie.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/11_1%20Cookie.html</id>
    <published>2019-08-26T09:00:34.000Z</published>
    <updated>2019-09-05T15:10:32.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11-1-Cookie入门"><a href="#11-1-Cookie入门" class="headerlink" title="11.1 Cookie入门"></a>11.1 Cookie入门</h1><h2 id="11-1-1-会话技术"><a href="#11-1-1-会话技术" class="headerlink" title="11.1.1 会话技术"></a>11.1.1 会话技术</h2><ol><li><strong>会话</strong>：一次会话中包含多次请求和响应。<ul><li>一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到有一方断开为止</li></ul></li><li><strong>功能</strong>：在一次会话的范围内的多次请求间，共享数据</li><li><strong>方式</strong>：<ol><li>客户端会话技术：Cookie</li><li>服务器端会话技术：Session</li></ol></li></ol><h2 id="11-1-2-Cookie："><a href="#11-1-2-Cookie：" class="headerlink" title="11.1.2 Cookie："></a>11.1.2 Cookie：</h2><ol><li><p>概念：客户端会话技术，将数据保存到客户端</p></li><li><p>快速入门：</p><ul><li>使用步骤<ol><li>创建Cookie对象，绑定数据<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Cookie(String name, String value)</span><br></pre></td></tr></table></figure></li><li>发送Cookie对象：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.addCookie(Cookie cookie)</span><br></pre></td></tr></table></figure></li><li>获取Cookie，拿到数据<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie[]  request.getCookies()</span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>实现原理</p><ul><li>基于响应头<code>set-cookie</code>和请求头<code>cookie</code>实现<br><img src="//cdn.foreversfj.com/image/blog/20190905/P4r5VlynENJP.png!blog" alt=""></li></ul></li></ol><h3 id="Cookie的细节"><a href="#Cookie的细节" class="headerlink" title="Cookie的细节"></a>Cookie的细节</h3><ol><li><p>一次可不可以发送多个cookie?</p><ul><li>可以</li><li>可以创建多个Cookie对象，使用response调用多次<code>addCookie</code>方法发送cookie即可。</li></ul></li><li><p>cookie在浏览器中保存多长时间？</p><ol><li>默认情况下，当浏览器关闭后，Cookie数据被销毁</li><li>持久化存储：<code>setMaxAge(int seconds)</code><blockquote><ol><li>正数：将Cookie数据写到硬盘的文件中。持久化存储。并指定cookie存活时间，时间到后，cookie文件自动失效</li><li>负数：默认值</li><li>零：删除cookie信息</li></ol></blockquote></li></ol></li><li><p>cookie能不能存中文？</p><ul><li><p>在tomcat 8 之前 cookie中不能直接存储中文数据。</p><blockquote><p>需要将中文数据转码—一般采用URL编码(%E3)</p></blockquote></li><li><p>在tomcat 8 之后，cookie支持中文数据。特殊字符还是不支持，建议使用URL编码存储，URL解码解析</p></li></ul></li><li><p>cookie共享问题？</p><ol><li>假设在一个tomcat服务器中，部署了多个web项目，那么在这些web项目中cookie能不能共享？<ul><li>默认情况下cookie不能共享</li><li><strong><code>setPath(String path)</code></strong>：设置cookie的获取范围。默认情况下，设置当前的虚拟目录<blockquote><p>如果要共享，则可以将<code>path</code>设置为<code>&quot;/&quot;</code></p></blockquote></li></ul></li><li>不同的tomcat服务器间cookie共享问题？<ul><li><strong><code>setDomain(String path)</code></strong>：如果设置一级域名相同，那么多个服务器之间cookie可以共享</li></ul></li></ol><blockquote><p><code>setDomain(&quot;.baidu.com&quot;)</code>，那么<code>tieba.baidu.com</code>和<code>news.baidu.com</code>中cookie可以共享</p></blockquote></li></ol><h3 id="Cookie的特点和作用"><a href="#Cookie的特点和作用" class="headerlink" title="Cookie的特点和作用"></a>Cookie的特点和作用</h3><ol><li>cookie存储数据在客户端浏览器</li><li>浏览器对于单个cookie 的大小有限制(4kb) 以及 对同一个域名下的总cookie数量也有限制(20个)<ul><li>作用：<ol><li>cookie一般用于存出少量的不太敏感的数据</li><li>在不登录的情况下，完成服务器对客户端的身份识别</li></ol></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      本节简述会话技术入门，知识及Cookie的相关概念
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十章 4.Response案例——文件下载</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_4%20Response%E6%A1%88%E4%BE%8B.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_4%20Response%E6%A1%88%E4%BE%8B.html</id>
    <published>2019-08-26T07:35:19.000Z</published>
    <updated>2019-09-05T15:05:12.753Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-4-Response案例——文件下载"><a href="#10-4-Response案例——文件下载" class="headerlink" title="10.4 Response案例——文件下载"></a>10.4 Response案例——文件下载</h1><h2 id="10-4-1-需求"><a href="#10-4-1-需求" class="headerlink" title="10.4.1 需求"></a>10.4.1 需求</h2><ol><li>页面显示超链接</li><li>点击超链接后弹出下载提示框</li><li>完成图片文件下载</li></ol><h2 id="10-4-2-分析"><a href="#10-4-2-分析" class="headerlink" title="10.4.2 分析"></a>10.4.2 分析</h2><ol><li>超链接指向的资源如果能够被浏览器解析，则在浏览器中展示，如果不能解析，则弹出下载提示框。不满足需求</li><li>任何资源都必须弹出下载提示框</li><li>使用响应头设置资源的打开方式：<ul><li><strong><code>content-disposition:attachment;filename=xxx</code></strong></li></ul></li></ol><h2 id="10-4-3-步骤"><a href="#10-4-3-步骤" class="headerlink" title="10.4.3 步骤"></a>10.4.3 步骤</h2><ol><li>定义页面，编辑超链接href属性，指向Servlet，传递资源名称filename</li><li>定义Servlet<ol><li>获取文件名称</li><li>使用字节输入流加载文件进内存</li><li>指定response的响应头： <code>content-disposition:attachment;filename=xxx</code></li><li>将数据写出到response输出流</li></ol></li></ol><h2 id="10-4-4-问题"><a href="#10-4-4-问题" class="headerlink" title="10.4.4 问题"></a>10.4.4 问题</h2><ul><li>中文文件问题<ul><li>解决思路：<ol><li>获取客户端使用的浏览器版本信息</li><li>根据不同的版本信息，设置filename的编码方式不同</li></ol></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Response案例——文件下载
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十章 3.ServletContext对象</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_3%20ServletContext%E5%AF%B9%E8%B1%A1.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_3%20ServletContext%E5%AF%B9%E8%B1%A1.html</id>
    <published>2019-08-26T06:18:30.000Z</published>
    <updated>2019-09-05T15:04:44.492Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-3-ServletContext对象"><a href="#10-3-ServletContext对象" class="headerlink" title="10.3 ServletContext对象"></a>10.3 ServletContext对象</h1><h2 id="10-3-1-基本概念"><a href="#10-3-1-基本概念" class="headerlink" title="10.3.1 基本概念"></a>10.3.1 基本概念</h2><ol><li>概念：代表整个web应用，可以和程序的容器(服务器)来通信</li><li>获取：<ol><li>通过request对象获取：<code>request.getServletContext();</code></li><li>通过HttpServlet获取：<code>this.getServletContext();</code></li></ol></li></ol><h2 id="10-3-2-功能"><a href="#10-3-2-功能" class="headerlink" title="10.3.2 功能"></a>10.3.2 功能</h2><ol><li><p><strong>获取MIME类型</strong>：</p><ul><li><strong>MIME类型</strong>：在互联网通信过程中定义的一种文件数据类型</li><li>格式：大类型/小类型，<code>text/html</code>、<code>image/jpeg</code></li><li>获取：<strong><code>String getMimeType(String file)</code></strong></li></ul></li><li><p>域对象：共享数据</p><ul><li><strong><code>setAttribute(String name,Object value)</code></strong></li><li><strong><code>getAttribute(String name)</code></strong></li><li><strong><code>removeAttribute(String name)</code></strong><blockquote><p><strong>ServletContext对象范围</strong>：所有用户所有请求的数据</p></blockquote></li></ul></li><li><p>获取文件的真实(服务器)路径</p><ul><li><p>方法：<strong><code>String getRealPath(String path)</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//web目录下资源访问</span></span><br><span class="line">String b = context.getRealPath(<span class="string">"/b.txt"</span>);</span><br><span class="line">System.out.println(b);</span><br><span class="line"><span class="comment">//WEB-INF目录下的资源访问</span></span><br><span class="line">String c = context.getRealPath(<span class="string">"/WEB-INF/c.txt"</span>);</span><br><span class="line">System.out.println(c);</span><br><span class="line"><span class="comment">//src目录下的资源访问</span></span><br><span class="line">String a = context.getRealPath(<span class="string">"/WEB-INF/classes/a.txt"</span>);</span><br><span class="line">System.out.println(a);</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      ServletContext对象代表整个web应用，可以和程序的容器(服务器)来通信
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十章 2.Response对象</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_2%20Response%E5%AF%B9%E8%B1%A1.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_2%20Response%E5%AF%B9%E8%B1%A1.html</id>
    <published>2019-08-26T04:26:48.000Z</published>
    <updated>2019-09-05T15:03:07.001Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-2-Response对象"><a href="#10-2-Response对象" class="headerlink" title="10.2 Response对象"></a>10.2 Response对象</h1><h2 id="10-2-1-功能"><a href="#10-2-1-功能" class="headerlink" title="10.2.1 功能"></a>10.2.1 功能</h2><p><strong>设置响应消息</strong></p><ul><li><strong>设置响应行</strong><ul><li>格式：<code>HTTP/1.1 200 ok</code></li><li>设置状态码：<code>setStatus(int sc)</code></li></ul></li><li><strong>设置响应头</strong>：<code>setHeader(String name, String value)</code></li><li><strong>设置响应体</strong>：<ul><li>使用步骤：<ol><li>获取输出流</li></ol><ul><li>字符输出流：<code>PrintWriter getWriter()</code></li><li>字节输出流：<code>ServletOutputStream getOutputStream()</code></li></ul><ol start="2"><li>使用输出流，将数据输出到客户端浏览器</li></ol></li></ul></li></ul><h3 id="10-2-2-案例"><a href="#10-2-2-案例" class="headerlink" title="10.2.2 案例"></a>10.2.2 案例</h3><h3 id="完成重定向"><a href="#完成重定向" class="headerlink" title="完成重定向"></a>完成重定向</h3><ul><li><p>重定向：资源跳转的方式</p></li><li><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 设置状态码为302</span></span><br><span class="line">response.setStatus(<span class="number">302</span>);</span><br><span class="line"><span class="comment">//2.设置响应头location</span></span><br><span class="line">response.setHeader(<span class="string">"location"</span>,<span class="string">"/day15/responseDemo2"</span>);</span><br><span class="line"><span class="comment">//简单的重定向方法</span></span><br><span class="line">response.sendRedirect(<span class="string">"/day15/responseDemo2"</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="forward-和-redirect-区别"><a href="#forward-和-redirect-区别" class="headerlink" title="forward 和  redirect 区别"></a>forward 和  redirect 区别</h4><ul><li><strong>重定向的特点</strong>：<code>redirect</code></li></ul><ol><li>地址栏发生变化</li><li>重定向可以访问其他站点(服务器)的资源</li><li>重定向是两次请求。不能使用request对象来共享数据</li></ol><ul><li><strong>转发的特点</strong>：<code>forward</code></li></ul><ol><li>转发地址栏路径不变</li><li>转发只能访问当前服务器下的资源</li><li>转发是一次请求，可以使用request对象来共享数据</li></ol><p><img src="//cdn.foreversfj.com/image/blog/20190905/rPq5c2Jft0rw.png!blog" alt=""></p><h4 id="路径写法"><a href="#路径写法" class="headerlink" title="路径写法"></a>路径写法</h4><ul><li><p>路径分类</p><ul><li><p><strong>相对路径</strong>：通过相对路径不可以确定唯一资源</p><ul><li>如：<code>./index.html</code></li></ul><ul><li>不以 <code>/</code> 开头，以 <code>.</code> 开头路径</li><li>规则：找到当前资源和目标资源之间的相对位置关系<blockquote><ul><li><strong><code>./</code></strong>：当前目录</li><li><strong><code>../</code></strong>：后退一级目录</li></ul></blockquote></li></ul></li><li><p><strong>绝对路径</strong>：通过绝对路径可以确定唯一资源</p><ul><li><p>如：<code>http://localhost/responseDemo2</code>，<code>/responseDemo2</code></p></li><li><p>以/开头的路径</p></li><li><p>规则：判断定义的路径是给谁用的？判断请求将来从哪儿发出</p><blockquote><p>给客户端浏览器使用：需要加虚拟目录(项目的访问路径)</p><ul><li>建议虚拟目录动态获取：<code>request.getContextPath()</code></li><li><code>&lt;a&gt;</code>， <code>&lt;form&gt;</code> 重定向…<br>给服务器使用：不需要加虚拟目录</li><li>转发路径</li></ul></blockquote></li></ul></li></ul></li></ul><h4 id="服务器输出字符数据到浏览器"><a href="#服务器输出字符数据到浏览器" class="headerlink" title="服务器输出字符数据到浏览器"></a>服务器输出字符数据到浏览器</h4><ul><li><p>步骤：</p><ol><li>获取字符输出流</li><li>输出数据</li></ol></li><li><p>注意：</p><ul><li><p>乱码问题：</p><ol><li><p><strong><code>PrintWriter pw = response.getWriter()</code></strong>：获取的流的默认编码是ISO-8859-1</p></li><li><p>设置该流的默认编码</p></li><li><p>告诉浏览器响应体使用的编码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简单的形式，设置编码，是在获取流之前设置</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br></pre></td></tr></table></figure><p><img src="//cdn.foreversfj.com/image/blog/20190905/xLibI99V7u49.png!blog" alt=""></p></li></ol></li></ul></li></ul><h4 id="服务器输出字节数据到浏览器"><a href="#服务器输出字节数据到浏览器" class="headerlink" title="服务器输出字节数据到浏览器"></a>服务器输出字节数据到浏览器</h4><ul><li>步骤：<ol><li>获取字节输出流</li><li>输出数据</li></ol></li></ul><h4 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h4><ol><li>本质：图片</li><li>目的：防止恶意表单注册</li></ol>]]></content>
    
    <summary type="html">
    
      本节简述Response对象
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十章 1.HTTP_Response协议</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_1%20HTTP_Response.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-26-Java/JavaWeb/10_1%20HTTP_Response.html</id>
    <published>2019-08-26T00:48:40.000Z</published>
    <updated>2019-09-05T15:00:59.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="10-1HTTP-Response协议"><a href="#10-1HTTP-Response协议" class="headerlink" title="10.1HTTP_Response协议"></a>10.1HTTP_Response协议</h1><h2 id="10-1-1-HTTP协议"><a href="#10-1-1-HTTP协议" class="headerlink" title="10.1.1 HTTP协议"></a>10.1.1 HTTP协议</h2><h3 id="request-amp-response对象原理图解"><a href="#request-amp-response对象原理图解" class="headerlink" title="request&amp;response对象原理图解"></a>request&amp;response对象原理图解</h3><p><img src="//cdn.foreversfj.com/image/blog/20190905/rF5vdrkmLXHt.png!blog" alt=""></p><h3 id="请求消息"><a href="#请求消息" class="headerlink" title="请求消息"></a>请求消息</h3><ul><li><strong>客户端发送给服务器端的数据</strong></li><li>数据格式：<ol><li><strong>请求行</strong></li><li><strong>请求头</strong></li><li><strong>请求空行</strong></li><li><strong>请求体</strong></li></ol></li></ul><h3 id="响应消息"><a href="#响应消息" class="headerlink" title="响应消息"></a>响应消息</h3><ul><li><p><strong>服务器端发送给客户端的数据</strong></p></li><li><p>数据格式：</p><ul><li><p><strong>响应行</strong>：</p><ul><li>组成：协议/版本 响应状态码 状态码描述</li><li>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态。<blockquote><p>状态码都是3位数字<br>分类：</p><ul><li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx多状态码</li><li>2xx：成功。代表：200</li><li>3xx：重定向。代表：302(重定向)，304(访问缓存)</li><li>4xx：客户端错误。<ul><li>404（请求路径没有对应的资源） </li><li>405：请求方式没有对应的doXxx方法</li></ul></li><li>5xx：服务器端错误。代表：500(服务器内部出现异常)</li></ul></blockquote></li></ul></li><li><p><strong>响应头</strong>：</p><ul><li>格式：<code>头名称： 值</code></li><li>常见的响应头：<ul><li><strong><code>Content-Type</code></strong>：服务器告诉客户端本次响应体数据格式以及编码格式</li><li><strong><code>Content-disposition</code></strong>：服务器告诉客户端以什么格式打开响应体数据<blockquote><ul><li><strong><code>in-line</code></strong>：默认值,在当前页面内打开</li><li><strong><code>attachment;filename=xxx</code></strong>：以附件形式打开响应体。文件下载</li></ul></blockquote></li></ul></li></ul></li><li><p><strong>响应空行</strong></p></li><li><p><strong>响应体</strong>：传输的数据</p></li></ul></li><li><p>响应字符串格式</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html;charset=UTF-8</span><br><span class="line"><span class="attribute">Content-Length</span>: 101</span><br><span class="line"><span class="attribute">Date</span>: Wed, 06 Jun 2018 07:08:42 GMT</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>$Title$<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        hello , response</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      本节简述HTTP Response协议的相关内容
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="java" scheme="https://blog.foreversfj.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第九章 4.案例：用户登录</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-23-Java/JavaWeb/09_4%20Request%E6%A1%88%E4%BE%8B.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-23-Java/JavaWeb/09_4%20Request%E6%A1%88%E4%BE%8B.html</id>
    <published>2019-08-23T08:35:58.000Z</published>
    <updated>2019-09-05T14:42:43.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9-4-案例：用户登录"><a href="#9-4-案例：用户登录" class="headerlink" title="9.4 案例：用户登录"></a>9.4 案例：用户登录</h1><h2 id="9-4-1-需求"><a href="#9-4-1-需求" class="headerlink" title="9.4.1 需求"></a>9.4.1 需求</h2><ul><li><p>用户登录案例需求：</p><ol><li><p>编写login.html登录页面</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username &amp; password 两个输入框</span><br></pre></td></tr></table></figure></li><li><p>使用Druid数据库连接池技术,操作mysql，数据库中user表</p></li><li><p>使用JdbcTemplate技术封装JDBC</p></li><li><p>登录成功跳转到SuccessServlet展示：登录成功！用户名,欢迎您</p></li><li><p>登录失败跳转到FailServlet展示：登录失败，用户名或密码错误</p></li></ol></li></ul><p><img src="//cdn.foreversfj.com/image/blog/20190905/SowObVeETuMO.png!blog" alt=""></p><h2 id="9-4-2-分析"><a href="#9-4-2-分析" class="headerlink" title="9.4.2 分析"></a>9.4.2 分析</h2><h3 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h3><ol><li><p>创建项目，导入html页面，配置文件，jar包</p></li><li><p>创建数据库环境</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> day14;</span><br><span class="line"><span class="keyword">USE</span> day14;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span>(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">    username <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">PASSWORD</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>创建包<code>com.sfj.domain</code>，创建类<code>User</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sfj.domain;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户的实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"id="</span> + id +</span><br><span class="line">            <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建包<code>com.sfj.util</code>，编写工具类<code>JDBCUtils</code></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> javax.xml.crypto.Data;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类 使用Durid连接池</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource ds ;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载配置文件</span></span><br><span class="line">            Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">//使用ClassLoader加载配置文件，获取字节输入流</span></span><br><span class="line">            InputStream is = JDBCUtils<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>()</span></span><br><span class="line">                .getResourceAsStream("druid.properties");</span><br><span class="line">            pro.load(is);</span><br><span class="line">            <span class="comment">//2.初始化连接池对象</span></span><br><span class="line">            ds = DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接池对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接Connection对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建包<code>com.sfj.dao</code>，创建类<code>UserDao</code>，提供<code>login</code>方法</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.util.JDBCUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 操作数据库中User表的类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//声明JDBCTemplate对象共用</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate template = <span class="keyword">new</span> JdbcTemplate(JDBCUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginUser 只有用户名和密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> user包含用户全部数据,没有查询到，返回null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User loginUser)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.编写sql</span></span><br><span class="line">            String sql = <span class="string">"select * from user where username = ?"</span></span><br><span class="line">                + <span class="string">" and password = ?"</span>;</span><br><span class="line">            <span class="comment">//2.调用query方法</span></span><br><span class="line">            User user = template.queryForObject(sql,</span><br><span class="line">                             <span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line"><span class="class">                             <span class="title">loginUser</span>.<span class="title">getUsername</span>(), </span></span><br><span class="line"><span class="class">                             <span class="title">loginUser</span>.<span class="title">getPassword</span>())</span>;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();<span class="comment">//记录日志</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写<code>com.sfj.web.servlet.LoginServlet</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.itcast.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.itcast.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/loginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.设置编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//3.封装user对象</span></span><br><span class="line">        User loginUser = <span class="keyword">new</span> User();</span><br><span class="line">        loginUser.setUsername(username);</span><br><span class="line">        loginUser.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用UserDao的login方法</span></span><br><span class="line">        UserDao dao = <span class="keyword">new</span> UserDao();</span><br><span class="line">        User user = dao.login(loginUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.判断user</span></span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//登录失败</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/failServlet"</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//登录成功</span></span><br><span class="line">            <span class="comment">//存储数据</span></span><br><span class="line">            req.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            <span class="comment">//转发</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/successServlet"</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doGet(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写<code>FailServlet</code>和<code>SuccessServlet</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/successServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取request域中共享的user对象</span></span><br><span class="line">        User user = (User) request.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">        <span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//给页面写一句话</span></span><br><span class="line">            <span class="comment">//设置编码</span></span><br><span class="line">            response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">            <span class="comment">//输出</span></span><br><span class="line">            response.getWriter().write(<span class="string">"登录成功！"</span></span><br><span class="line">                                       + user.getUsername()+<span class="string">",欢迎您"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/failServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FailServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//给页面写一句话</span></span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        response.getWriter().write(<span class="string">"登录失败，用户名或密码错误"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request,response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>login.html</code>中form表单的action路径的写法</p><ul><li><strong>虚拟目录+Servlet的资源路径</strong></li></ul></li><li><p><code>BeanUtils</code>工具类，简化数据封装</p><ul><li><p>用于封装<code>JavaBean</code>的</p></li><li><p><strong>JavaBean</strong>：标准的Java类</p><ul><li>要求：<ol><li>类必须被public修饰</li><li>必须提供空参的构造器</li><li>成员变量必须使用private修饰</li><li>提供公共<code>setter</code>和<code>getter</code>方法</li></ol></li><li>功能：封装数据</li></ul></li><li><p>概念：<br>成员变量：<br>属性：<code>setter</code>和<code>getter</code>方法截取后的产物<br>例如：<code>getUsername() --&gt; Username--&gt; username</code></p></li><li><p>方法：</p><ul><li><strong><code>setProperty()</code></strong></li><li><strong><code>getProperty()</code></strong></li><li><strong><code>populate(Object obj , Map map)</code></strong>：将map集合的键值对信息，封装到对应的<code>JavaBean</code>对象中</li></ul></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      本节使用request模拟用户登录案例
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="HTTP" scheme="https://blog.foreversfj.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第九章 3.Request</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-23-Java/JavaWeb/09_3%20Request.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-23-Java/JavaWeb/09_3%20Request.html</id>
    <published>2019-08-23T08:11:49.000Z</published>
    <updated>2019-09-05T14:32:37.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="9-3-Request"><a href="#9-3-Request" class="headerlink" title="9.3 Request"></a>9.3 Request</h1><ol><li><p>request对象和response对象的原理</p><ol><li>request和response对象是由服务器创建的。我们来使用它们</li><li>request对象是来获取请求消息，response对象是来设置响应消息</li></ol></li><li><p>request对象继承体系结构：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletRequest -- 接口</span><br><span class="line">        |    继承</span><br><span class="line">    HttpServletRequest    -- 接口</span><br><span class="line">            |    实现</span><br><span class="line">        org.apache.catalina.connector.RequestFacade 类(tomcat)</span><br></pre></td></tr></table></figure></li></ol><h2 id="9-3-1-Request功能"><a href="#9-3-1-Request功能" class="headerlink" title="9.3.1 Request功能"></a>9.3.1 Request功能</h2><h3 id="获取请求消息数据"><a href="#获取请求消息数据" class="headerlink" title="获取请求消息数据"></a>获取请求消息数据</h3><h4 id="获取请求行数据"><a href="#获取请求行数据" class="headerlink" title="获取请求行数据"></a>获取请求行数据</h4><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/day14/demo1?name=zhangsan</span> HTTP/1.1</span><br></pre></td></tr></table></figure><ol><li>获取请求方式 ：GET<ul><li><strong><code>String getMethod()</code></strong></li></ul></li><li>获取虚拟目录：/day14<ul><li><strong><code>String getContextPath()</code></strong></li></ul></li><li>获取Servlet路径: /demo1<ul><li><strong><code>String getServletPath()</code></strong></li></ul></li><li>获取get方式请求参数：name=zhangsan<ul><li><strong><code>String getQueryString()</code></strong></li></ul></li><li>获取请求URI：/day14/demo1<ul><li><strong><code>String getRequestURI()</code></strong>：/day14/demo1</li><li><strong><code>StringBuffer getRequestURL()</code></strong>：<code>http://localhost/day14/demo1</code></li><li><strong><code>URL</code></strong>：统一资源定位符：<code>http://localhost/day14/demo1</code></li><li><strong><code>URI</code></strong>：统一资源标识符：<code>/day14/demo1</code></li></ul></li><li>获取协议及版本：HTTP/1.1<ul><li><strong><code>String getProtocol()</code></strong></li></ul></li><li>获取客户机的IP地址：<ul><li><strong><code>String getRemoteAddr()</code></strong></li></ul></li></ol><h4 id="获取请求头数据"><a href="#获取请求头数据" class="headerlink" title="获取请求头数据"></a>获取请求头数据</h4><ul><li>方法：<ul><li><strong><code>String getHeader(String name)</code></strong>：通过请求头的名称获取请求头的值</li><li><strong><code>Enumeration&lt;String&gt; getHeaderNames()</code></strong>：获取所有的请求头名称</li></ul></li></ul><h4 id="获取请求体数据"><a href="#获取请求体数据" class="headerlink" title="获取请求体数据"></a>获取请求体数据</h4><ul><li>请求体：只有POST请求方式，才有请求体，在请求体中封装了POST请求的请求参数</li><li>步骤：<ul><li>获取流对象<ul><li><strong>BufferedReader getReader()</strong>：获取字符输入流，只能操作字符数据</li><li><strong>ServletInputStream getInputStream()</strong>：获取字节输入流，可以操作所有类型数据</li></ul></li><li>再从流对象中拿数据</li></ul></li></ul><h2 id="9-3-2-其他功能"><a href="#9-3-2-其他功能" class="headerlink" title="9.3.2 其他功能"></a>9.3.2 其他功能</h2><ul><li><strong>获取请求参数通用方式</strong>：不论get还是post请求方式都可以使用下列方法来获取请求参数<ol><li><strong><code>String getParameter(String name)</code></strong>：根据参数名称获取参数值    username=zs&amp;password=123</li><li><strong><code>String[] getParameterValues(String name)</code></strong>：根据参数名称获取参数值的数组  hobby=xx&amp;hobby=game</li><li><strong><code>Enumeration&lt;String&gt; getParameterNames()</code></strong>：获取所有请求的参数名称</li><li><strong><code>Map&lt;String,String[]&gt; getParameterMap()</code></strong>：获取所有参数的map集合</li></ol><ul><li>中文乱码问题：<ul><li><strong><code>get方式</code></strong>：tomcat 8 已经将get方式乱码问题解决了</li><li><strong><code>post方式</code></strong>：会乱码</li><li>解决：在获取参数前，设置request的编码：<br/><code>request.setCharacterEncoding(&quot;utf-8&quot;);</code></li></ul></li></ul></li><li><strong>请求转发</strong>：一种在服务器内部的资源跳转方式<ol><li><strong>步骤：</strong><ul><li>通过request对象获取请求转发器对象：<br/><code>RequestDispatcher getRequestDispatcher(String path)</code></li><li>使用RequestDispatcher对象来进行转发：<br/><code>forward(ServletRequest request, ServletResponse response)</code></li></ul></li><li><strong>特点：</strong><ul><li>浏览器地址栏路径不发生变化</li><li>只能转发到当前服务器内部资源中。</li><li>转发是一次请求</li></ul></li><li><strong>共享数据：</strong><ul><li>域对象：一个有作用范围的对象，可以在范围内共享数据</li><li><code>request</code>域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据</li><li>方法：<ol><li><strong><code>void setAttribute(String name,Object obj)</code></strong>：存储数据</li><li><strong><code>Object getAttitude(String name)</code></strong>：通过键获取值</li><li><strong><code>void removeAttribute(String name)</code></strong>：通过键移除键值对</li></ol></li></ul></li><li><strong>获取ServletContext：</strong><ul><li><strong><code>ServletContext getServletContext()</code></strong></li></ul></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      本节简述Request的相关概念和原理
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Request" scheme="https://blog.foreversfj.com/tags/Request/"/>
    
  </entry>
  
</feed>
