<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>foreverSFJ</title>
  
  <subtitle>今夜月色真美，希望风也温柔~~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.foreversfj.com/"/>
  <updated>2020-06-20T08:01:15.439Z</updated>
  <id>https://blog.foreversfj.com/</id>
  
  <author>
    <name>foreverSFJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mybatis/Untitled</title>
    <link href="https://blog.foreversfj.com/uncategorized/2020-06-20-/Mybatis/Untitled.html"/>
    <id>https://blog.foreversfj.com/uncategorized/2020-06-20-/Mybatis/Untitled.html</id>
    <published>2020-06-20T08:01:15.439Z</published>
    <updated>2020-06-20T08:01:15.439Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第5章 Maven总结</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/05_Maven%E6%80%BB%E7%BB%93.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/05_Maven%E6%80%BB%E7%BB%93.html</id>
    <published>2020-05-17T05:11:59.000Z</published>
    <updated>2020-05-17T05:11:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第5章-Maven总结"><a href="#第5章-Maven总结" class="headerlink" title="第5章 Maven总结"></a>第5章 Maven总结</h1><h2 id="5-1-Maven仓库"><a href="#5-1-Maven仓库" class="headerlink" title="5.1 Maven仓库"></a>5.1 Maven仓库</h2><p>1、Maven仓库的类型有哪些？</p><p>2、Maven工程查找仓库的流程是什么？</p><p>3、本地仓库如何配置？</p><h2 id="5-2-常用的Maven命令"><a href="#5-2-常用的Maven命令" class="headerlink" title="5.2 常用的Maven命令"></a>5.2 常用的Maven命令</h2><p>常用的Maven命令包括：</p><ul><li><p>compile：编译</p></li><li><p>clean：清理</p></li><li><p>test：测试</p></li><li><p>package：打包</p></li><li><p>install：安装</p></li></ul><h2 id="5-3-坐标定义"><a href="#5-3-坐标定义" class="headerlink" title="5.3 坐标定义"></a>5.3 坐标定义</h2><p>在pom.xml中定义坐标，内容包括：groupId、artifactId、version，详细内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--项目名称，定义为组织名+项目名，类似包名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.itcast.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模块名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-first<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 当前项目版本号，snapshot为快照版本即非正式版本，release为正式发布版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>打包类型<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-4-pom基本配置"><a href="#5-4-pom基本配置" class="headerlink" title="5.4 pom基本配置"></a>5.4 pom基本配置</h2><p>pom.xml是Maven项目的核心配置文件，位于每个工程的根目录，基本配置如下：</p><p><code>&lt;project &gt;</code> ：文件的根节点 . </p><p><code>&lt;modelversion &gt;</code>： pom.xml使用的对象模型版本</p><p><code>&lt;groupId &gt;</code>：项目名称，一般写项目的域名</p><p><code>&lt;artifactId &gt;</code>：模块名称，子项目名或模块名称</p><p><code>&lt;version &gt;</code> ：产品的版本号 .</p><p><code>&lt;packaging &gt;</code>：打包类型，一般有jar、war、pom 等 </p><p><code>&lt;name &gt;</code>：项目的显示名，常用于 Maven 生成的文档。 </p><p><code>&lt;description &gt;</code> ：项目描述，常用于 Maven 生成的文档</p><p><code>&lt;dependencies&gt;</code>：项目依赖构件配置，配置项目依赖构件的坐标</p><p><code>&lt;build&gt;</code>：项目构建配置，配置编译、运行插件等。</p>]]></content>
    
    <summary type="html">
    
      最基础的Maven知识总结
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第4章 maven工程运行调试</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/04_Maven%E5%B7%A5%E7%A8%8B%E7%9A%84%E8%BF%90%E8%A1%8C%E8%B0%83%E8%AF%95.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/04_Maven%E5%B7%A5%E7%A8%8B%E7%9A%84%E8%BF%90%E8%A1%8C%E8%B0%83%E8%AF%95.html</id>
    <published>2020-05-17T05:08:26.000Z</published>
    <updated>2020-05-17T05:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第4章-maven工程运行调试"><a href="#第4章-maven工程运行调试" class="headerlink" title="第4章 maven工程运行调试"></a>第4章 maven工程运行调试</h1><h2 id="4-1-端口占用处理"><a href="#4-1-端口占用处理" class="headerlink" title="4.1 端口占用处理"></a>4.1 端口占用处理</h2><p>重新执行<code>tomcat:run</code>命令重启工程，重启之前需手动停止 tomcat，否则报下边的错误：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/vkUB4o26BAAc.jpg!blog" alt=""></p><h2 id="4-2-断点调试"><a href="#4-2-断点调试" class="headerlink" title="4.2 断点调试"></a>4.2 断点调试</h2><p>点击如图所示选项</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/OkkU6rGunWui.jpg!blog" alt=""></p><p>在弹出框中点击如图加号按钮找到maven选项</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/97wtSXG7RbgB.jpg!blog" alt=""></p><p>在弹出窗口中填写如下信息</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/v7aGXeFPPgj7.jpg!blog" alt=""></p><p>完成后先Apply再OK结束配置后，可以在主界面找到我们刚才配置的操作名称。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/3prLSaeGqNqb.jpg!blog" alt=""></p><p>如上图红框选中的两个按钮，左侧是正常启动，右侧是debug启动。</p>]]></content>
    
    <summary type="html">
    
      本节简述maven工程运行调试的部分措施
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第3章 第二节 idea开发maven项目</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_2_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_2_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2020-05-17T04:29:57.000Z</published>
    <updated>2020-05-17T04:29:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第3章-Maven常用命令"><a href="#第3章-Maven常用命令" class="headerlink" title="第3章 Maven常用命令"></a>第3章 Maven常用命令</h1><h2 id="3-4-idea开发maven项目"><a href="#3-4-idea开发maven项目" class="headerlink" title="3.4 idea开发maven项目"></a>3.4 idea开发maven项目</h2><h3 id="3-4-1-idea的maven配置"><a href="#3-4-1-idea的maven配置" class="headerlink" title="3.4.1 idea的maven配置"></a>3.4.1 idea的maven配置</h3><p><strong>配置maven</strong>：</p><p>打开→File→Settings配置maven</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/ejb99w4pNzMy.png!blog" alt=""></p><p>依据图片指示，选择本地maven安装目录，指定maven安装目录下conf文件夹中settings配置文件。</p><h3 id="3-4-2-创建一个maven的web工程"><a href="#3-4-2-创建一个maven的web工程" class="headerlink" title="3.4.2 创建一个maven的web工程"></a>3.4.2 创建一个maven的web工程</h3><ol><li><p>打开idea，选择创建一个新工程</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/pOaj7TDNkyGO.png!blog" alt=""></p></li><li><p>选择 idea 提供好的 maven 的web 工程模板 </p><p><img src="//cdn.foreversfj.com/image/blog/20200517/ncJfS0azBbOx.png!blog" alt=""></p></li><li><p>点击 Next 填写项目信息 </p><p><img src="//cdn.foreversfj.com/image/blog/20200517/g0blHtpn1SQF.png!blog" alt=""></p></li><li><p>点击Next，此处不做改动。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/Tuvak2l30qTG.jpg!blog" alt=""></p></li><li><p>点击Next选择项目所在目录</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/l10j0JH0rnXD.jpg!blog" alt=""></p></li><li><p>点击Finish后开始创建工程，耐心等待，直到出现如下界面。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/rWHek1fbGCat.jpg!blog" alt=""></p></li><li><p>手动添加<code>src/main/java</code>目录，如下图右键main文件夹→New→Directory</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/pF7K6tamzlva.jpg!blog" alt=""></p></li><li><p>创建一个新的文件夹命名为java</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/bL0gXIcVKPOr.jpg!blog" alt=""></p></li><li><p>点击OK后，在新的文件夹java上右键→Make Directory as→Sources Root</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/xOdbXql4JtAu.jpg!blog" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      实战idea开发maven项目
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第3章 第二节 maven项目搭建Web构架</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_3_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_3_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2020-05-17T04:29:57.000Z</published>
    <updated>2020-05-17T04:29:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第3章-Maven常用命令"><a href="#第3章-Maven常用命令" class="headerlink" title="第3章 Maven常用命令"></a>第3章 Maven常用命令</h1><h2 id="3-5-搭建Web构架"><a href="#3-5-搭建Web构架" class="headerlink" title="3.5 搭建Web构架"></a>3.5 搭建Web构架</h2><h3 id="3-5-1-创建一个Servlet"><a href="#3-5-1-创建一个Servlet" class="headerlink" title="3.5.1 创建一个Servlet"></a>3.5.1 创建一个Servlet</h3><p><code>src/java/main</code>创建了一个Servlet，但报错</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/vmFL9CzttfFq.jpg!blog" alt=""></p><p>要解决问题，就是要将<code>servlet-api-xxx.jar</code>包放进来，作为maven工程应当添加servlet的坐标，从而导入它的jar</p><h3 id="3-5-2-在pom-xml文件添加坐标"><a href="#3-5-2-在pom-xml文件添加坐标" class="headerlink" title="3.5.2 在pom.xml文件添加坐标"></a>3.5.2 在pom.xml文件添加坐标</h3><p>直接打开<code>hello_maven</code>工程的<code>pom.xml</code>文件，再添加坐标</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/1kCgzDwPQmP2.jpg!blog" alt=""></p><p>添加jar包的坐标时，还可以指定这个jar包将来的作用范围。</p><p>每个maven工程都需要定义本工程的坐标，坐标是maven对jar包的身份定义，比如：入门程序的坐标定义如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--项目名称，定义为组织名+项目名，类似包名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模块名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hello_maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 当前项目版本号，snapshot为快照版本即非正式版本，release为正式发布版本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span> &gt;</span>打包类型<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打包类型：</span></span><br><span class="line"><span class="comment">jar：执行package会打成jar包</span></span><br><span class="line"><span class="comment">war：执行package会打成war包</span></span><br><span class="line"><span class="comment">pom ：用于maven工程的继承，通常父工程设置为pom --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-3-坐标的来源方式"><a href="#3-5-3-坐标的来源方式" class="headerlink" title="3.5.3 坐标的来源方式"></a>3.5.3 坐标的来源方式</h3><p>添加依赖需要指定依赖jar包的坐标，但是很多情况我们是不知道jar包的的坐标，可以通过如下方式查询：</p><ul><li><p><strong>从互联网搜索：</strong></p><ul><li><a href="http://search.maven.org/" target="_blank" rel="noopener">http://search.maven.org/</a></li><li><a href="http://mvnrepository.com/" target="_blank" rel="noopener">http://mvnrepository.com/</a></li></ul><p>网站搜索示例：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/Tg18pSltSjTe.jpg!blog" alt=""></p><p><img src="//cdn.foreversfj.com/image/blog/20200517/2m3PGbHmT3qM.jpg!blog" alt=""></p></li></ul><h3 id="3-5-4-依赖范围"><a href="#3-5-4-依赖范围" class="headerlink" title="3.5.4 依赖范围"></a>3.5.4 依赖范围</h3><p>A依赖B，需要在A的<code>pom.xml</code>文件中添加B的坐标，添加坐标时需要指定依赖范围，依赖范围包括：</p><ul><li><p><strong>compile：</strong>编译范围，指A在编译时依赖B，此范围为默认依赖范围。编译范围的依赖会用在编译、测试、运行，由于运行时需要所以编译范围的依赖会被打包。</p></li><li><p><strong>provided：</strong>provided依赖只有在当JDK或者一个容器已提供该依赖之后才使用， provided依赖在编译和测试时需要，在运行时不需要，比如：servlet api被tomcat容器提供。</p></li><li><p><strong>runtime：</strong>runtime依赖在运行和测试系统的时候需要，但在编译的时候不需要。比如：jdbc的驱动包。由于运行时需要所以runtime范围的依赖会被打包。</p></li><li><p><strong>test：</strong>test范围依赖 在编译和运行时都不需要，它们只有在测试编译和测试运行阶段可用，比如：junit。由于运行时不需要所以test范围依赖不会被打包。</p></li><li><p><strong>system</strong>：system范围依赖与provided类似，但是你必须显式的提供一个对于本地系统中JAR文件的路径，需要指定systemPath磁盘路径，system依赖不推荐使用。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/v4yJnnH4KRxw.jpg!blog" alt=""></p></li></ul><p>在maven-web工程中测试各各scop。</p><p><strong>测试总结：</strong></p><ul><li>默认引入 的jar包 ——- compile 【默认范围 可以不写】（编译、测试、运行 都有效 ）</li><li>servlet-api 、jsp-api ——- provided （编译、测试 有效， 运行时无效 防止和tomcat下jar冲突）</li><li>jdbc驱动jar包 —- runtime （测试、运行 有效 ）</li><li>junit —– test （测试有效）</li></ul><p>依赖范围由强到弱的顺序是：<strong>compile&gt;provided&gt;runtime&gt;test</strong></p><h3 id="3-5-5-项目中添加的坐标"><a href="#3-5-5-项目中添加的坐标" class="headerlink" title="3.5.5 项目中添加的坐标"></a>3.5.5 项目中添加的坐标</h3><p><img src="//cdn.foreversfj.com/image/blog/20200517/574WJOC4w7qv.jpg!blog" alt=""></p><h3 id="3-5-6-设置jdk编译版本"><a href="#3-5-6-设置jdk编译版本" class="headerlink" title="3.5.6 设置jdk编译版本"></a>3.5.6 设置jdk编译版本</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-5-7-编写servlet"><a href="#3-5-7-编写servlet" class="headerlink" title="3.5.7 编写servlet"></a>3.5.7 编写servlet</h3><p>在<code>src/main/java</code>中创建ServletTest</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/NCb0SwQ5xHkj.jpg!blog" alt=""></p><p>内容如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/bb09gFWJHEIe.jpg!blog" alt=""></p><h3 id="3-5-8-编写jsp"><a href="#3-5-8-编写jsp" class="headerlink" title="3.5.8 编写jsp"></a>3.5.8 编写jsp</h3><p><img src="//cdn.foreversfj.com/image/blog/20200517/kumyavwMXozJ.jpg!blog" alt=""></p><h3 id="3-5-9-在web-xml中配置servlet访问路径"><a href="#3-5-9-在web-xml中配置servlet访问路径" class="headerlink" title="3.5.9 在web.xml中配置servlet访问路径"></a>3.5.9 在web.xml中配置servlet访问路径</h3><p><img src="//cdn.foreversfj.com/image/blog/20200517/06VpaRl0eKv2.jpg!blog" alt=""></p><h3 id="3-5-10-添加tomcat7插件"><a href="#3-5-10-添加tomcat7插件" class="headerlink" title="3.5.10 添加tomcat7插件"></a>3.5.10 添加tomcat7插件</h3><p>在pom文件中添加如下内容</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/NaTY43jl8v3D.jpg!blog" alt=""></p><p>此时点击idea最右侧Maven Projects，</p><p>就可以看到我们新添加的tomcat7插件</p><p>双击tomcat7插件下tomcat7:run命令直接运行项目</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/2oh117eAHdu3.jpg!blog" alt=""></p><p>也可以直接点击如图按钮，手动输入tomc7:run命令运行项目</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/Xfzvrrk6nac7.jpg!blog" alt=""></p><p>点击后弹出如下图窗口</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/8YeRrzsq8hQN.jpg!blog" alt=""></p><h3 id="3-5-11-运行结果"><a href="#3-5-11-运行结果" class="headerlink" title="3.5.11 运行结果"></a>3.5.11 运行结果</h3><p><img src="//cdn.foreversfj.com/image/blog/20200517/LIfFb80cCSxk.jpg!blog" alt=""></p>]]></content>
    
    <summary type="html">
    
      实战idea开发maven项目
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第3章 第一节 Maven常用命令</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_1_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/03_1_Maven%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2020-05-17T04:14:20.000Z</published>
    <updated>2020-05-17T04:14:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第3章-Maven常用命令"><a href="#第3章-Maven常用命令" class="headerlink" title="第3章 Maven常用命令"></a>第3章 Maven常用命令</h1><h2 id="3-1-基础命令"><a href="#3-1-基础命令" class="headerlink" title="3.1 基础命令"></a>3.1 基础命令</h2><h3 id="3-1-1-compile"><a href="#3-1-1-compile" class="headerlink" title="3.1.1 compile"></a>3.1.1 compile</h3><p>compile是maven工程的编译命令，作用是将src/main/java下的文件编译为class文件输出到target目录下。</p><p>cmd进入命令状态，执行mvn compile，如下图提示成功：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/1m6rvM3QttnH.png!blogw" alt=""></p><p>查看 target 目录，class 文件已生成，编译完成。 </p><p><img src="//cdn.foreversfj.com/image/blog/20200517/w229C9VcGl0u.png!blog" alt=""></p><h3 id="3-1-2-test"><a href="#3-1-2-test" class="headerlink" title="3.1.2 test"></a>3.1.2 test</h3><p>test 是 maven 工程的测试命令  <code>mvn test</code>，会执行 <code>src/test/java</code> 下的单元测试类。 </p><p>cmd 执行<code>mvn test</code>执行 <code>src/test/java</code>下单元测试类，下图为测试结果，运行 1 个测试用例，全部成功。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/zdDGcw9iRKad.png!blog" alt=""></p><h3 id="3-1-3-clean"><a href="#3-1-3-clean" class="headerlink" title="3.1.3 clean"></a>3.1.3 clean</h3><p>clean是maven工程的清理命令，执行 <code>clean</code>会删除<code>target</code>目录及内容。</p><h3 id="3-1-4-package"><a href="#3-1-4-package" class="headerlink" title="3.1.4 package"></a>3.1.4 package</h3><p>package是maven工程的打包命令，对于java工程执行package打成jar包，对于web工程打成war包。</p><h3 id="3-1-5-install"><a href="#3-1-5-install" class="headerlink" title="3.1.5 install"></a>3.1.5 install</h3><p>install是maven工程的安装命令，执行install将maven打成jar包或war包发布到本地仓库。</p><p>从运行结果中，可以看出：</p><p><strong>当后面的命令执行时，前面的操作过程也都会自动。</strong></p><h2 id="3-2-Maven指令的生命周期"><a href="#3-2-Maven指令的生命周期" class="headerlink" title="3.2 Maven指令的生命周期"></a>3.2 Maven指令的生命周期</h2><p>maven对项目构建过程分为三套相互独立的生命周期，请注意这里说的是“三套”，而且“相互独立”，这三套生命周期分别是：</p><p><strong>Clean Lifecycle</strong> 在进行真正的构建之前进行一些清理工作。</p><p><strong>Default Lifecycle</strong> 构建的核心部分，编译，测试，打包，部署等等。</p><p><strong>Site Lifecycle</strong> 生成项目报告，站点，发布站点。</p><h2 id="3-3-maven的概念模型"><a href="#3-3-maven的概念模型" class="headerlink" title="3.3 maven的概念模型"></a>3.3 maven的概念模型</h2><p>Maven包含了一个项目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/BufzmTgRimWR.png!blog" alt=""></p><ul><li><p>项目对象模型 (Project Object Model)</p><p>一个maven工程都有一个pom.xml文件，通过pom.xml文件定义项目的坐标、项目依赖、项目信息、插件目标等。</p></li><li><p>依赖管理系统(Dependency Management System)</p><p>通过maven的依赖管理对项目所依赖的jar 包进行统一管理。</p><p>比如：项目依赖<code>junit4.9</code>，通过在<code>pom.xml</code>中定义<code>junit4.9</code>的依赖，即使用<code>junit4.9</code>，如下所示是<code>junit4.9</code>的依赖定义：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此项目运行使用junit，所以此项目依赖junit --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- junit的项目名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- junit的模块名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- junit版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 依赖范围：单元测试时使用junit --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>一个项目生命周期(Project Lifecycle)</p><p>使用maven完成项目的构建，项目构建包括：清理、编译、测试、部署等过程，maven将这些过程规范为一个生命周期，如下所示是生命周期的各各阶段：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/H3wflCNCSHro.png!blog" alt=""></p><p>maven通过执行一些简单命令即可实现上边生命周期的各各过程，比如执行mvn compile执行编译、执行mvn clean执行清理。</p></li><li><p>一组标准集合</p><p>maven将整个项目管理过程定义一组标准，比如：通过maven构建工程有标准的目录结构，有标准的生命周期阶段、依赖管理有标准的坐标定义等。</p></li><li><p>插件(plugin)目标(goal)</p><p>maven 管理项目生命周期过程都是基于插件完成的。</p></li></ul>]]></content>
    
    <summary type="html">
    
      在cmd中通过一系列的maven命令来对我们的maven-helloworld工程进行编译、测试、运行、打包、安装、部署。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第2章 第三节 Maven工程的认识</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_3_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_3_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html</id>
    <published>2020-05-17T03:05:00.000Z</published>
    <updated>2020-05-17T03:05:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第2章-Maven的使用"><a href="#第2章-Maven的使用" class="headerlink" title="第2章 Maven的使用"></a>第2章 Maven的使用</h1><h2 id="2-3-Maven工程的认识"><a href="#2-3-Maven工程的认识" class="headerlink" title="2.3 Maven工程的认识"></a>2.3 Maven工程的认识</h2><h3 id="2-3-1-Maven工程的目录结构"><a href="#2-3-1-Maven工程的目录结构" class="headerlink" title="2.3.1 Maven工程的目录结构"></a>2.3.1 Maven工程的目录结构</h3><p><img src="//cdn.foreversfj.com/image/blog/20200517/dq1MUjv6FbJ2.png!blog" alt=""></p><p>作为一个maven工程，它的src目录和pom.xml是必备的。</p><p>进入src目录后，我们发现它里面的目录结构如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/aabYL9g2adwT.png!blog" alt=""></p><p><strong><code>src/main/java</code></strong> —— 存放项目的.java文件</p><p><strong><code>src/main/resources</code></strong> —— 存放项目资源文件，如spring, hibernate配置文件</p><p><strong><code>src/test/java</code></strong> —— 存放所有单元测试.java文件，如JUnit测试类</p><p><strong><code>src/test/resources</code></strong> —— 测试资源文件</p><p><strong><code>target</code></strong> —— 项目输出位置，编译后的class文件会输出到此目录</p><p><strong><code>pom.xml</code></strong>——maven项目核心配置文件</p><blockquote><p>注意：如果是普通的java项目，那么就没有webapp目录。</p></blockquote><h3 id="2-3-2-Maven工程的运行"><a href="#2-3-2-Maven工程的运行" class="headerlink" title="2.3.2 Maven工程的运行"></a>2.3.2 Maven工程的运行</h3><p>进入maven工程目录（当前目录有<code>pom.xml</code>文件），运行<code>tomcat:run</code>命令。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/HdSVL4K2vB2u.png!blog" alt=""></p><p>根据上边的提示信息，通过浏览器访问：<a href="http://localhost:8080/maven-helloworld/" target="_blank" rel="noopener">http://localhost:8080/maven-helloworld/</a></p><p><img src="//cdn.foreversfj.com/image/blog/20200517/5Yiux7V91roC.png!blog" alt=""></p><h3 id="2-3-3-问题处理"><a href="#2-3-3-问题处理" class="headerlink" title="2.3.3 问题处理"></a>2.3.3 问题处理</h3><p>如果本地仓库配置错误会报下边的错误</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/eruuy2QPeQde.png!blog" alt=""></p><p><strong>分析：</strong></p><p>maven工程运行先从本地仓库找jar包，本地仓库没有再从中央仓库找，上边提示downloading…<br>表示 从中央仓库下载jar，由于本地没有联网，报错。</p><p><strong>解决：</strong></p><p>在maven安装目录的conf/setting.xml文件中配置本地仓库，参考上一节。</p>]]></content>
    
    <summary type="html">
    
      本章节介绍Maven的初始化工程
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第2章 第一节 Maven的安装</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_1_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_1_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html</id>
    <published>2020-05-17T02:45:54.000Z</published>
    <updated>2020-05-17T02:45:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第2章-Maven的使用"><a href="#第2章-Maven的使用" class="headerlink" title="第2章 Maven的使用"></a>第2章 Maven的使用</h1><h2 id="2-1-Maven的安装"><a href="#2-1-Maven的安装" class="headerlink" title="2.1 Maven的安装"></a>2.1 Maven的安装</h2><h3 id="2-1-1-Maven软件的下载"><a href="#2-1-1-Maven软件的下载" class="headerlink" title="2.1.1 Maven软件的下载"></a>2.1.1 Maven软件的下载</h3><p>为了使用Maven管理工具，我们首先要到官网去下载它的安装软件。通过百度搜索“Maven“如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/KGP0at1pYOOE.png!blog" alt=""></p><p>点击<code>Download</code>链接，就可以直接进入到<code>Maven</code>软件的下载页面：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/9Tqpc7Y2qGN3.png!blog" alt=""></p><p>目前最新版是apache-maven-3.5.3版本，我们当时使用的是apache-maven-3.5.2版本，大家也可以下载最新版本。</p><p>Apache-maven-3.5.2下载地址：<a href="http://archive.apache.org/dist/maven/maven-3/" target="_blank" rel="noopener">http://archive.apache.org/dist/maven/maven-3/</a></p><p>下载后的版本如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/fzziX8i8o7Kc.png!blog" alt=""></p><h3 id="2-1-2-Maven软件的安装"><a href="#2-1-2-Maven软件的安装" class="headerlink" title="2.1.2 Maven软件的安装"></a>2.1.2 Maven软件的安装</h3><p>Maven下载后，将Maven解压到一个没有中文没有空格的路径下，比如<code>D:\software\maven</code>下面。</p><p>解压后目录结构如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/QJsCBF6cKcKz.png!blog" alt=""></p><p><strong><code>bin</code></strong>：存放了maven的命令，比如我们前面用到的<code>mvn tomcat:run</code></p><p><strong><code>boot</code></strong>：存放了一些maven本身的引导程序，如类加载器等</p><p><strong><code>conf</code></strong>：存放了maven的一些配置文件，如<code>setting.xml</code>文件</p><p><strong><code>lib</code></strong>：存放了maven本身运行所需的一些jar包</p><p>至此我们的maven软件就可以使用了，前提是你的电脑上之前已经安装并配置好了JDK。</p><h3 id="2-1-3-JDK的准备及统一"><a href="#2-1-3-JDK的准备及统一" class="headerlink" title="2.1.3 JDK的准备及统一"></a>2.1.3 JDK的准备及统一</h3><ol><li><p>JDK环境:</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/cxWtOUV9TR9p.png!blog" alt=""></p></li></ol><h3 id="2-1-4-Maven及JDK配置"><a href="#2-1-4-Maven及JDK配置" class="headerlink" title="2.1.4 Maven及JDK配置"></a>2.1.4 Maven及JDK配置</h3><p>电脑上需安装java环境，安装JDK1.7 + 版本 （将JAVA_HOME/bin 配置环境变量path ），我们使用的是JDK8相关版本</p><p>配置 MAVEN_HOME ，变量值就是你的maven安装 的路径（bin目录之前一级目录）</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/CqP0dI2suBXp.png!blog" alt=""></p><p>上面配置了我们的Maven软件，注意这个目录就是之前你解压maven的压缩文件包在的的目录，最好不要有中文和空格。</p><p>再次检查JDK的安装目录，如下图：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/DgogTuAHWXYx.png!blog" alt=""></p><h3 id="2-1-5-Maven软件版本测试"><a href="#2-1-5-Maven软件版本测试" class="headerlink" title="2.1.5 Maven软件版本测试"></a>2.1.5 Maven软件版本测试</h3><p>通过 mvn -v命令检查 maven是否安装成功，看到maven的版本为3.5.2及java版本为1.8即为安装成功。</p><p>找开cmd命令，输入<code>mvn –v</code>命令，如下图：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/O2SN4wHNS8Kd.png!blog" alt=""></p><p>我们发现maven的版本，及jdk的版本符合要求，这样我们的maven软件安装就成功了。</p>]]></content>
    
    <summary type="html">
    
      本章节介绍Maven的基本使用方法
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第2章 第二节 Maven仓库</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_2_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/02_2_Maven%E7%9A%84%E4%BD%BF%E7%94%A8.html</id>
    <published>2020-05-17T02:45:54.000Z</published>
    <updated>2020-05-17T02:45:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第2章-Maven的使用"><a href="#第2章-Maven的使用" class="headerlink" title="第2章 Maven的使用"></a>第2章 Maven的使用</h1><h2 id="2-2-Maven仓库"><a href="#2-2-Maven仓库" class="headerlink" title="2.2 Maven仓库"></a>2.2 Maven仓库</h2><h3 id="2-2-1-Maven仓库的分类"><a href="#2-2-1-Maven仓库的分类" class="headerlink" title="2.2.1 Maven仓库的分类"></a>2.2.1 Maven仓库的分类</h3><p>maven的工作需要从仓库下载一些jar包，如下图所示，本地的项目A、项目B等都会通过maven软件从远程仓库（可以理解为互联网上的仓库）下载jar包并存在本地仓库，本地仓库 就是本地文件夹，当第二次需要此jar包时则不再从远程仓库下载，因为本地仓库已经存在了，可以将本地仓库理解为缓存，有了本地仓库就不用每次从远程仓库下载了。</p><p>下图描述了maven中仓库的类型：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/CfyueE4VFSL0.png!blog" alt=""></p><ul><li><p>本地仓库 ：用来存储从远程仓库或中央仓库下载的插件和jar包，项目使用一些插件或jar包，优先从本地仓库查找</p><p>默认本地仓库位置在 <code>${user.dir}/.m2/repository</code>，<code>${user.dir}</code>表示windows用户目录。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/VdQGL1ncnNgn.png!blog" alt=""></p></li><li><p>远程仓库：如果本地需要插件或者jar包，本地仓库没有，默认去远程仓库下载。</p><p>远程仓库可以在互联网内也可以在局域网内。</p></li><li><p>中央仓库 ：在maven软件中内置一个远程仓库<a href="http://repo1.maven.org/maven2" target="_blank" rel="noopener">地址</a> ，它是中央仓库，服务于整个互联网，它是由Maven团队自己维护，里面存储了非常全的jar包，它包含了世界上大部分流行的开源项目构件。</p></li></ul><h3 id="2-2-2-Maven本地仓库的配置"><a href="#2-2-2-Maven本地仓库的配置" class="headerlink" title="2.2.2 Maven本地仓库的配置"></a>2.2.2 Maven本地仓库的配置</h3><p>如果在无网的状态下学习，需要有事先准备的本地仓库，将 仓库文件“repository.rar”解压至自己的电脑上，如解压在D:\repository目录下（可以放在没有中文及空格的目录下）。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/UAes3e0qcDN6.png!blog" alt=""></p><p>在MAVE_HOME/conf/settings.xml文件中配置本地仓库位置（maven的安装目录下）：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/BNQJyxs9Wea9.png!blog" alt=""></p><p>打开settings.xml文件，配置如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/IhIfGzkqosE1.png!blog" alt=""></p><h3 id="2-2-3-全局setting与用户setting"><a href="#2-2-3-全局setting与用户setting" class="headerlink" title="2.2.3 全局setting与用户setting"></a>2.2.3 全局setting与用户setting</h3><p>maven仓库地址、私服等配置信息需要在<code>setting.xml</code>文件中配置，分为全局配置和用户配置。</p><p>在maven安装目录下的有<code>conf/setting.xml</code>文件，此<code>setting.xml</code>文件用于maven的所有project项目，它作为maven的全局配置。</p><p>如需要个性配置则需要在用户配置中设置，用户配置的<code>setting.xml</code>文件默认的位置在：<code>${user.dir} /.m2/settings.xml</code>目录中,<code>${user.dir}</code>指windows 中的用户目录。</p><p>maven会先找用户配置，如果找到则以用户配置文件为准，否则使用全局配置文件。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/AMxSvVjYacCM.png!blog" alt=""></p>]]></content>
    
    <summary type="html">
    
      本章节介绍Maven的仓库使用以及本地仓库的建立
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第1章 Maven介绍</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/01_Maven%E4%BB%8B%E7%BB%8D.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2020-05-17-/Maven/01_Maven%E4%BB%8B%E7%BB%8D.html</id>
    <published>2020-05-17T02:35:05.000Z</published>
    <updated>2020-05-17T02:35:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第1章-Maven介绍"><a href="#第1章-Maven介绍" class="headerlink" title="第1章 Maven介绍"></a>第1章 Maven介绍</h1><h2 id="1-1-什么是Maven"><a href="#1-1-什么是Maven" class="headerlink" title="1.1 什么是Maven"></a>1.1 什么是Maven</h2><h3 id="1-1-1-什么是Maven"><a href="#1-1-1-什么是Maven" class="headerlink" title="1.1.1 什么是Maven"></a>1.1.1 什么是Maven</h3><p>Maven的正确发音是[ˈmevən]，而不是“马瘟”以及其他什么瘟。Maven在美国是一个口语化的词语，代表专家、内行的意思。</p><p>一个对Maven比较正式的定义是这么说的：Maven是一个项目管理工具，它包含了一个项目对象模型 (<strong>POM：Project Object Model</strong>)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。</p><h3 id="1-1-1-Maven能解决什么问题"><a href="#1-1-1-Maven能解决什么问题" class="headerlink" title="1.1.1 Maven能解决什么问题"></a>1.1.1 Maven能解决什么问题</h3><p>可以用更通俗的方式来说明。我们知道，项目开发不仅仅是写写代码而已，期间会伴随着各种必不可少的事情要做，下面列举几个感受一下：</p><p>1、我们需要引用各种jar包，尤其是比较大的工程，引用的jar包往往有几十个乃至上百个， 每用到一种jar包，都需要手动引入工程目录，而且经常遇到各种让人抓狂的jar包冲突，版本冲突。</p><p>2、我们辛辛苦苦写好了Java文件，可是只懂0和1的白痴电脑却完全读不懂，需要将它编译成二进制字节码。好歹现在这项工作可以由各种集成开发工具帮我们完成，Eclipse、IDEA等都可以将代码即时编译。当然，如果你嫌生命漫长，何不铺张，也可以用记事本来敲代码，然后用javac命令一个个地去编译，逗电脑玩。</p><p>3、世界上没有不存在bug的代码，计算机喜欢bug就和人们总是喜欢美女帅哥一样。为了追求美为了减少bug，因此写完了代码，我们还要写一些单元测试，然后一个个的运行来检验代码质量。</p><p>4、再优雅的代码也是要出来卖的。我们后面还需要把代码与各种配置文件、资源整合到一起，定型打包，如果是web项目，还需要将之发布到服务器，供人蹂躏。</p><p>试想，如果现在有一种工具，可以把你从上面的繁琐工作中解放出来，能帮你构建工程，管理jar包，编译代码，还能帮你自动运行单元测试，打包，生成报表，甚至能帮你部署项目，生成Web站点，你会心动吗？Maven就可以解决上面所提到的这些问题。</p><h3 id="1-1-3-Maven的优势举例"><a href="#1-1-3-Maven的优势举例" class="headerlink" title="1.1.3 Maven的优势举例"></a>1.1.3 Maven的优势举例</h3><p>前面我们通过Web阶段项目，要能够将项目运行起来，就必须将该项目所依赖的一些jar包添加到工程中，否则项目就不能运行。试想如果具有相同架构的项目有十个，那么我们就需要将这一份jar包复制到十个不同的工程中。我们一起来看一个CRM项目的工程大小。</p><p>使用传统Web项目构建的CRM项目如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/na6ka6BeKifn.png!blog" alt=""></p><p>原因主要是因为上面的WEB程序要运行，我们必须将项目运行所需的Jar包复制到工程目录中，从而导致了工程很大。</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/gnQFi3pSIHXc.png!blog" alt=""></p><blockquote><p>小结：可以初步推断它里面一定没有jar 包，继续思考，没有jar包的项目怎么可能运行呢？</p></blockquote><h2 id="1-2-Maven的两个精典作用"><a href="#1-2-Maven的两个精典作用" class="headerlink" title="1.2 Maven的两个精典作用"></a>1.2 Maven的两个精典作用</h2><h3 id="1-2-1-Maven的依赖管理"><a href="#1-2-1-Maven的依赖管理" class="headerlink" title="1.2.1 Maven的依赖管理"></a>1.2.1 Maven的依赖管理</h3><p>Maven的一个核心特性就是依赖管理。当我们涉及到多模块的项目（包含成百个模块或者子项目），管理依赖就变成一项困难的任务。Maven展示出了它对处理这种情形的高度控制。</p><p>传统的WEB项目中，我们必须将工程所依赖的jar包复制到工程中，导致了工程的变得很大。那么maven工程是如何使得工程变得很少呢？</p><p>分析如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/Bis3JaFPmfiB.png!blog" alt=""></p><p>通过分析发现：maven工程中不直接将jar包导入到工程中，而是通过在pom.xml文件中添加所需jar包的坐标，这样就很好的避免了jar直接引入进来，在需要用到jar包的时候，只要查找pom.xml文件，再通过pom.xml文件中的坐标，到一个专门用于”存放jar包的仓库”(maven仓库)中根据坐标从而找到这些jar包，再把这些jar包拿去运行。</p><p>那么问题来了</p><p>第一：”存放jar包的仓库”长什么样？</p><p>第二：通过读取pom.xml 文件中的坐标，再到仓库中找到jar包，会不会很慢？从而导致这种方式不可行！</p><p>第一个问题：存放jar包的仓库长什么样，这一点我们后期会分析仓库的分类，也会带大家去看我们的本地的仓库长什么样。</p><p>第二个问题：通过pom.xml文件配置要引入的jar包的坐标，再读取坐标并到仓库中加载jar包，这样我们就可以直接使用jar包了，为了解决这个过程中速度慢的问题，maven中也有索引的概念，通过建立索引，可以大大提高加载jar包的速度，使得我们认为jar包基本跟放在本地的工程文件中再读取出来的速度是一样的。这个过程就好比我们查阅字典时，为了能够加快查找到内容，书前面的目录就好比是索引，有了这个目录我们就可以方便找到内容了，一样的在maven仓库中有了索引我们就可以认为可以快速找到jar包。</p><h3 id="1-2-2-项目的一键构建"><a href="#1-2-2-项目的一键构建" class="headerlink" title="1.2.2 项目的一键构建"></a>1.2.2 项目的一键构建</h3><p>我们的项目，往往都要经历编译、测试、运行、打包、安装 ，部署等一系列过程。</p><p><strong>什么是构建？</strong></p><p>指的是项目从编译、测试、运行、打包、安装 ，部署整个过程都交给maven进行管理，这个过程称为构建。</p><p><strong>一键构建</strong>：指的是整个构建过程，使用maven一个命令可以轻松完成整个工作。</p><p>Maven规范化构建流程如下：</p><p><img src="//cdn.foreversfj.com/image/blog/20200517/eTwr6nSlMB3R.png!blog" alt=""></p>]]></content>
    
    <summary type="html">
    
      本章介绍什么是Maven，Maven有什么作用。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="Maven" scheme="https://blog.foreversfj.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>第三章 第4节 自定义Mybatis的设计模式说明</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_04%20%E8%87%AA%E5%AE%9A%E4%B9%89Mybatis%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%AF%B4%E6%98%8E.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_04%20%E8%87%AA%E5%AE%9A%E4%B9%89Mybatis%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%AF%B4%E6%98%8E.html</id>
    <published>2019-09-08T10:52:51.000Z</published>
    <updated>2019-09-08T10:52:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-5-自定义Mybatis的设计模式"><a href="#3-5-自定义Mybatis的设计模式" class="headerlink" title="3.5 自定义Mybatis的设计模式"></a>3.5 自定义Mybatis的设计模式</h1><h2 id="3-5-1-工厂模式（SqlSessionFactory）"><a href="#3-5-1-工厂模式（SqlSessionFactory）" class="headerlink" title="3.5.1 工厂模式（SqlSessionFactory）"></a>3.5.1 工厂模式（SqlSessionFactory）</h2><p><img src="//cdn.foreversfj.com/image/blog/20200517/G3VBzy41TXHg.jpg!blog" alt=""></p><p>工厂模式的原理如下图：</p><img src="//cdn.foreversfj.com/image/blog/20200517/DgJJOPHptI1J.jpg!blog" style="zoom:80%;" /><h2 id="3-5-2-代理模式-MapperProxyFactory"><a href="#3-5-2-代理模式-MapperProxyFactory" class="headerlink" title="3.5.2 代理模式(MapperProxyFactory)"></a>3.5.2 代理模式(MapperProxyFactory)</h2><p><img src="//cdn.foreversfj.com/image/blog/20200517/68eGrUVgVvxM.jpg!blog" alt=""></p><p>代理模式分为静态和动态代理。静态代理，我们通常都很熟悉。有一个写好的代理类，实现与要代理的类的一个共同的接口，目的是为了约束也为了安全。具体不再多说。</p><p>这里主要想说的是关于动态代理。我们知道静态代理若想代理多个类，实现扩展功能，那么它必须具有多个代理类分别取代理不同的实现类。这样做的后果是造成太多的代码冗余。那么我们会思考如果做，才能既满足需求，又没有太多的冗余代码呢？——————动态代理。通过前面的课程我们已经学过了基于JDK的动态代理实现方式，今天我们就会使用JDK动态代理方式来编写MapperProxyFactory类。 </p><p>动态代理模型图：</p><img src="//cdn.foreversfj.com/image/blog/20200517/K4pX5IvsGJL8.jpg!blog" style="zoom:80%;" /><h2 id="3-5-3-构建者模式-SqlSessionFactoryBuilder"><a href="#3-5-3-构建者模式-SqlSessionFactoryBuilder" class="headerlink" title="3.5.3 构建者模式(SqlSessionFactoryBuilder)"></a>3.5.3 构建者模式(SqlSessionFactoryBuilder)</h2><p>首先我们一起来学习构建者模式，通过百度百科如下：</p><img src="//cdn.foreversfj.com/image/blog/20200517/beXxCJBvHFhm.jpg!blog" style="zoom:80%;" /><p>具体设计模式的模型图如下：</p><img src="//cdn.foreversfj.com/image/blog/20200517/BSQQpopsllXT.jpg!blog" style="zoom:80%;" /><p>从图中我们可以看出，创建者模式由四部分组成。</p><p><strong>抽象创建者角色：</strong>给出一个抽象接口，以规范产品对象的各个组成成分的建造。一般而言，此接口独立于应用程序的商业逻辑。模式中直接创建产品对象的是具体创建者角色。</p><p>具体创建者必须实现这个接口的两种方法：</p><ul><li>一是建造方法，比如图中的buildPart1和buildPart2方法；</li><li>另一种是结果返回方法，即图中的getProduct方法。</li></ul><p>一般来说，产品所包含的零件数目与建造方法的数目相符。换言之，有多少零件，就有多少相应的建造方法。 </p><p><strong>具体创建者角色：</strong>他们在应用程序中负责创建产品的实例。这个角色要完成的任务包括：</p><p>1、实现抽象创建者所声明的抽象方法，给出一步一步的完成产品创建实例的操作。</p><p>2、在创建完成后，提供产品的实例。 </p><p><strong>导演者角色：</strong>这个类调用具体创建者角色以创建产品对象。但是导演者并没有产品类的具体知识，真正拥有产品类的具体知识的是具体创建者角色。 </p><p><strong>产品角色：</strong>产品便是建造中的复杂对象。一般说来，一个系统中会有多于一个的产品类，而且这些产品类并不一定有共同的接口，而完全可以使不相关联的。</p>]]></content>
    
    <summary type="html">
    
      自定义Mybatis的设计模式说明
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第三章 第3节 基于注解方式定义Mybatis框架</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_03%20%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%AE%9A%E4%B9%89.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_03%20%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E5%AE%9A%E4%B9%89.html</id>
    <published>2019-09-08T10:42:51.000Z</published>
    <updated>2019-09-08T10:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-4-基于注解方式定义Mybatis框架"><a href="#3-4-基于注解方式定义Mybatis框架" class="headerlink" title="3.4 基于注解方式定义Mybatis框架"></a>3.4 基于注解方式定义Mybatis框架</h1><h2 id="3-4-1-自定义-Select注解"><a href="#3-4-1-自定义-Select注解" class="headerlink" title="3.4.1 自定义@Select注解"></a>3.4.1 自定义@Select注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: Select&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 自定义查询注解&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME) </span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD) </span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Select &#123; <span class="function">String <span class="title">value</span><span class="params">()</span></span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-2-修改持久层接口"><a href="#3-4-2-修改持久层接口" class="headerlink" title="3.4.2 修改持久层接口"></a>3.4.2 修改持久层接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: IUserDao&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用户的持久层操作&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 查询所有用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>) </span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4-3-修改SqlMapConfig-xml"><a href="#3-4-3-修改SqlMapConfig-xml" class="headerlink" title="3.4.3 修改SqlMapConfig.xml"></a>3.4.3 修改SqlMapConfig.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 配置mybatis的环境 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql的环境 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!-- 配置事务的类型 --&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置连接数据库的信息：用的是数据源(连接池) --&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/ee50"</span>/&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"1234"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 告知mybatis映射配置的位置 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.IUserDao"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      基于注解方式定义Mybatis框架
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第三章 第2节 基于XML的自定义mybatis框架</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_02%20%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_02%20%E5%9F%BA%E4%BA%8EXML%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89.html</id>
    <published>2019-09-08T10:32:51.000Z</published>
    <updated>2019-09-08T10:32:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-3-基于XML的自定义mybatis框架"><a href="#3-3-基于XML的自定义mybatis框架" class="headerlink" title="3.3 基于XML的自定义mybatis框架"></a>3.3 基于XML的自定义mybatis框架</h1><h2 id="3-3-1-编写持久层接口和IUserDao-xml"><a href="#3-3-1-编写持久层接口和IUserDao-xml" class="headerlink" title="3.3.1 编写持久层接口和IUserDao.xml"></a>3.3.1 编写持久层接口和IUserDao.xml</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: IUserDao&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用户的持久层操作&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 查询所有用户 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.IUserDao"</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 配置查询所有操作 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span> </span><br><span class="line">        select * from user </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意： 此处我们使用的也是mybatis的配置文件，所以也要把约束删除了</p></blockquote><h2 id="3-3-2-编写构建者类"><a href="#3-3-2-编写构建者类" class="headerlink" title="3.3.2 编写构建者类"></a>3.3.2 编写构建者类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: SqlSessionFactoryBuilder&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用于构建SqlSessionFactory的&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionFactoryBuilder</span> </span>&#123; </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据传入的流，实现对SqlSessionFactory的创建</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> in 它就是SqlMapConfig.xml的配置以及里面包含的IUserDao.xml的配置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">build</span><span class="params">(InputStream in)</span> </span>&#123; </span><br><span class="line">        DefaultSqlSessionFactory factory = <span class="keyword">new</span> DefaultSqlSessionFactory(); </span><br><span class="line">        <span class="comment">//给factory中config赋值 </span></span><br><span class="line">        factory.setConfig(in); </span><br><span class="line">        <span class="keyword">return</span> factory; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-3-编写SqlSessionFactory接口和实现类"><a href="#3-3-3-编写SqlSessionFactory接口和实现类" class="headerlink" title="3.3.3 编写SqlSessionFactory接口和实现类"></a>3.3.3 编写SqlSessionFactory接口和实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: SqlSessionFactory&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: SqlSessionFactory的接口&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SqlSessionFactory</span> </span>&#123; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 创建一个新的SqlSession对象 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function">SqlSession <span class="title">openSession</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: DefaultSqlSessionFactory&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description:SqlSessionFactory的默认实现 &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultSqlSessionFactory</span> <span class="keyword">implements</span> <span class="title">SqlSessionFactory</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> InputStream config = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfig</span><span class="params">(InputStream config)</span> </span>&#123; <span class="keyword">this</span>.config = config; &#125;</span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSession <span class="title">openSession</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        DefaultSqlSession session = <span class="keyword">new</span> DefaultSqlSession();</span><br><span class="line">        <span class="comment">//调用工具类解析xml文件 </span></span><br><span class="line">        XMLConfigBuilder.loadConfiguration(session, config); </span><br><span class="line">        <span class="keyword">return</span> session; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-4-编写SqlSession接口和实现类"><a href="#3-3-4-编写SqlSession接口和实现类" class="headerlink" title="3.3.4 编写SqlSession接口和实现类"></a>3.3.4 编写SqlSession接口和实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: SqlSession&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 操作数据库的核心对象&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SqlSession</span> </span>&#123; </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建Dao接口的代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> daoClass </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    &lt;T&gt; <span class="function">T <span class="title">getMapper</span><span class="params">(Class&lt;T&gt; daoClass)</span></span>; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: DefaultSqlSession&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: SqlSession的具体实现&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DefaultSqlSession</span> <span class="keyword">implements</span> <span class="title">SqlSession</span> </span>&#123; </span><br><span class="line">    <span class="comment">//核心配置对象 </span></span><br><span class="line">    <span class="keyword">private</span> Configuration cfg; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCfg</span><span class="params">(Configuration cfg)</span> </span>&#123; <span class="keyword">this</span>.cfg = cfg; &#125; </span><br><span class="line">    <span class="comment">//连接对象 </span></span><br><span class="line">    <span class="keyword">private</span> Connection conn; </span><br><span class="line">    <span class="comment">//调用DataSourceUtils工具类获取连接 </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123; </span><br><span class="line">            conn = DataSourceUtil.getDataSource(cfg).getConnection(); </span><br><span class="line">            <span class="keyword">return</span> conn; </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 动态代理：</span></span><br><span class="line"><span class="comment">     * 涉及的类：Proxy </span></span><br><span class="line"><span class="comment">     * 使用的方法：newProxyInstance </span></span><br><span class="line"><span class="comment">     * 方法的参数： </span></span><br><span class="line"><span class="comment">     * ClassLoader：和被代理对象使用相同的类加载器,通常都是固定的 </span></span><br><span class="line"><span class="comment">     * Class[]：代理对象和被代理对象要求有相同的行为。（具有相同的方法） </span></span><br><span class="line"><span class="comment">     * InvocationHandler：如何代理。需要我们自己提供的增强部分的代码 </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getMapper</span><span class="params">(Class&lt;T&gt; daoClass)</span> </span>&#123; </span><br><span class="line">        conn = getConn();</span><br><span class="line">        System.out.println(conn); </span><br><span class="line">        T daoProxy = (T) Proxy.newProxyInstance(daoClass.getClassLoader(),<span class="keyword">new</span> Class[] &#123;daoClass&#125;, <span class="keyword">new</span> MapperProxyFactory(cfg.getMappers(),conn)); </span><br><span class="line">        <span class="keyword">return</span> daoProxy;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">//释放资源 </span></span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123; </span><br><span class="line">            System.out.println(conn); </span><br><span class="line">            conn.close(); </span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace(); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有方法</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">selectList</span><span class="params">(String statement)</span></span>&#123;</span><br><span class="line">        Mapper mapper = cfg.getMappers().get(statement); </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Executor().selectList(mapper,conn); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-5-编写用于创建Dao接口代理对象的类"><a href="#3-3-5-编写用于创建Dao接口代理对象的类" class="headerlink" title="3.3.5 编写用于创建Dao接口代理对象的类"></a>3.3.5 编写用于创建Dao接口代理对象的类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: MapperProxyFactory&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用于创建代理对象是增强方法&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperProxyFactory</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Mapper&gt; mappers; </span><br><span class="line">    <span class="keyword">private</span> Connection conn; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MapperProxyFactory</span><span class="params">(Map&lt;String, Mapper&gt; mappers,Connection conn)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">this</span>.mappers = mappers; </span><br><span class="line">        <span class="keyword">this</span>.conn = conn; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对当前正在执行的方法进行增强 </span></span><br><span class="line"><span class="comment">     * 取出当前执行的方法名称</span></span><br><span class="line"><span class="comment">     * 取出当前执行的方法所在类 </span></span><br><span class="line"><span class="comment">     * 拼接成key </span></span><br><span class="line"><span class="comment">     * 去Map中获取Value（Mapper) </span></span><br><span class="line"><span class="comment">     * 使用工具类Executor的selectList方法</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//1.取出方法名 </span></span><br><span class="line">        String methodName = method.getName(); </span><br><span class="line">        <span class="comment">//2.取出方法所在类名 </span></span><br><span class="line">        String className = method.getDeclaringClass().getName(); </span><br><span class="line">        <span class="comment">//3.拼接成Key </span></span><br><span class="line">        String key = className+<span class="string">"."</span>+methodName; </span><br><span class="line">        <span class="comment">//4.使用key取出mapper </span></span><br><span class="line">        Mapper mapper = mappers.get(key); </span><br><span class="line">        <span class="keyword">if</span>(mapper == <span class="keyword">null</span>) &#123; </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"传入的参数有误，无法获取执行的必要条件"</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//5.创建Executor对象</span></span><br><span class="line">        Executor executor = <span class="keyword">new</span> Executor();<span class="keyword">return</span> executor.selectList(mapper, conn);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-6-运行测试类"><a href="#3-3-6-运行测试类" class="headerlink" title="3.3.6 运行测试类"></a>3.3.6 运行测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: MybatisTest&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 测试mybatis的环境&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.读取配置文件 </span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>); </span><br><span class="line">        <span class="comment">//2.创建SqlSessionFactory的构建者对象</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        <span class="comment">//3.使用构建者创建工厂对象SqlSessionFactory </span></span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line">        <span class="comment">//4.使用SqlSessionFactory生产SqlSession对象 </span></span><br><span class="line">        SqlSession session = factory.openSession(); </span><br><span class="line">        <span class="comment">//5.使用SqlSession创建dao接口的代理对象 </span></span><br><span class="line">        IUserDao userDao = session.getMapper(IUserDao<span class="class">.<span class="keyword">class</span>)</span>; </span><br><span class="line">        <span class="comment">//6.使用代理对象执行查询所有方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll(); </span><br><span class="line">        <span class="keyword">for</span>(User user : users) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//7.释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close(); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      基于XML的自定义mybatis框架
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第三章 第1节 自定义Mybatis框架</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_01%20%E8%87%AA%E5%AE%9A%E4%B9%89Mybatis%E6%A1%86%E6%9E%B6.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/03_01%20%E8%87%AA%E5%AE%9A%E4%B9%89Mybatis%E6%A1%86%E6%9E%B6.html</id>
    <published>2019-09-08T09:52:51.000Z</published>
    <updated>2019-09-08T09:52:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="3-1-自定义Mybatis框架的分析"><a href="#3-1-自定义Mybatis框架的分析" class="headerlink" title="3.1 自定义Mybatis框架的分析"></a>3.1 自定义Mybatis框架的分析</h1><h2 id="3-1-1-涉及知识点介绍"><a href="#3-1-1-涉及知识点介绍" class="headerlink" title="3.1.1 涉及知识点介绍"></a>3.1.1 涉及知识点介绍</h2><p>本章我们将使用前面所学的基础知识来构建一个属于自己的持久层框架，将会涉及到的一些知识点：工厂模式（Factory工厂模式）、构造者模式（Builder模式）、代理模式，反射，自定义注解，注解的反射，xml解析，数据库元数据，元数据的反射等。</p><h2 id="3-1-2-分析流程"><a href="#3-1-2-分析流程" class="headerlink" title="3.1.2 分析流程"></a>3.1.2 分析流程</h2><p><img src="//cdn.foreversfj.com/image/blog/20200517/bJxkQ3aKO6mQ.jpg!blog" alt=""></p><h1 id="3-2-前期准备"><a href="#3-2-前期准备" class="headerlink" title="3.2 前期准备"></a>3.2 前期准备</h1><h2 id="3-2-1-创建Maven工程"><a href="#3-2-1-创建Maven工程" class="headerlink" title="3.2.1 创建Maven工程"></a>3.2.1 创建Maven工程</h2><p>创建mybatis02的工程，工程信息如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Groupid</span>:<span class="string">com.itheima</span></span><br><span class="line"><span class="attr">ArtifactId</span>:<span class="string">mybatis02</span></span><br><span class="line"><span class="attr">Packing</span>:<span class="string">jar</span></span><br></pre></td></tr></table></figure><h2 id="3-2-2-引入相关坐标"><a href="#3-2-2-引入相关坐标" class="headerlink" title="3.2.2 引入相关坐标"></a>3.2.2 引入相关坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日志坐标 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 解析xml的dom4j --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dom4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mysql驱动 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- dom4j的依赖包jaxen --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxen<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-2-3-引入工具类到项目中"><a href="#3-2-3-引入工具类到项目中" class="headerlink" title="3.2.3 引入工具类到项目中"></a>3.2.3 引入工具类到项目中</h2><p>由于该部分代码过长，请<a href="https://cdn.foreversfj.com/java/blogXMLConfigbuilder.java" target="_blank" rel="noopener">转见</a>，使用UTF-8编码浏览</p><h2 id="3-2-4-编写SqlMapConfig-xml"><a href="#3-2-4-编写SqlMapConfig-xml" class="headerlink" title="3.2.4 编写SqlMapConfig.xml"></a>3.2.4 编写SqlMapConfig.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql:///eesy"</span> &gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"1234"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意： 此处我们直接使用的是mybatis的配置文件，但是由于我们没有使用mybatis的jar包，所以要把配置文件的约束删掉否则会报错（如果电脑能接入互联网，不删也行）</p></blockquote><h2 id="3-2-5-编写读取配置文件类"><a href="#3-2-5-编写读取配置文件类" class="headerlink" title="3.2.5 编写读取配置文件类"></a>3.2.5 编写读取配置文件类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: Resources&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用于读取配置文件的类&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Resources</span> </span>&#123; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 用于加载xml文件，并且得到一个流对象 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xmlPath </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * 在实际开发中读取配置文件: </span></span><br><span class="line"><span class="comment">     * 第一：使用类加载器。但是有要求：a文件不能过大。 b文件必须在类路径下(classpath) </span></span><br><span class="line"><span class="comment">     * 第二：使用ServletContext的getRealPath() </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InputStream <span class="title">getResourceAsStream</span><span class="params">(String xmlPath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Resources<span class="class">.<span class="keyword">class</span>.<span class="title">getClassLoader</span>().<span class="title">getResourceAsStream</span>(<span class="title">xmlPath</span>)</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-6-编写Mapper类"><a href="#3-2-6-编写Mapper类" class="headerlink" title="3.2.6 编写Mapper类"></a>3.2.6 编写Mapper类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: Mapper&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用于封装查询时的必要信息：要执行的SQL语句和实体类的全限定类名&lt;/p&gt; </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mapper</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> String queryString;<span class="comment">//sql</span></span><br><span class="line">    <span class="keyword">private</span> String resultType;<span class="comment">//结果类型的全限定类名</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getQueryString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> queryString; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQueryString</span><span class="params">(String queryString)</span> </span>&#123; <span class="keyword">this</span>.queryString = queryString; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getResultType</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> resultType;  &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResultType</span><span class="params">(String resultType)</span> </span>&#123; <span class="keyword">this</span>.resultType = resultType; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-7-编写Configuration配置类"><a href="#3-2-7-编写Configuration配置类" class="headerlink" title="3.2.7 编写Configuration配置类"></a>3.2.7 编写Configuration配置类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 核心配置类 </span></span><br><span class="line"><span class="comment"> * 1.数据库信息</span></span><br><span class="line"><span class="comment"> * 2.sql的map集合 </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Configuration</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> String username; <span class="comment">//用户名 </span></span><br><span class="line">    <span class="keyword">private</span> String password;<span class="comment">//密码</span></span><br><span class="line">    <span class="keyword">private</span> String url;<span class="comment">//地址</span></span><br><span class="line">    <span class="keyword">private</span> String driver;<span class="comment">//驱动 </span></span><br><span class="line">    <span class="comment">//map集合 Map&lt;唯一标识，Mapper&gt; 用于保存映射文件中的sql标识及sql语句 </span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Mapper&gt; mappers; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> username;  &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123; <span class="keyword">this</span>.username = username;  &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> password; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123; <span class="keyword">this</span>.password = password; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> url; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrl</span><span class="params">(String url)</span> </span>&#123; <span class="keyword">this</span>.url = url; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDriver</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> driver; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDriver</span><span class="params">(String driver)</span> </span>&#123; <span class="keyword">this</span>.driver = driver; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Mapper&gt; <span class="title">getMappers</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> mappers; &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMappers</span><span class="params">(Map&lt;String, Mapper&gt; mappers)</span> </span>&#123; <span class="keyword">this</span>.mappers = mappers; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-8-编写User实体类"><a href="#3-2-8-编写User实体类" class="headerlink" title="3.2.8 编写User实体类"></a>3.2.8 编写User实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id; </span><br><span class="line">    <span class="keyword">private</span> String username;<span class="comment">// 用户姓名 </span></span><br><span class="line">    <span class="keyword">private</span> String sex;<span class="comment">// 性别 </span></span><br><span class="line">    <span class="keyword">private</span> Date birthday;<span class="comment">// 生日 </span></span><br><span class="line">    <span class="keyword">private</span> String address;<span class="comment">// 地址</span></span><br><span class="line">    <span class="comment">//省略getter与setter </span></span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User [id="</span> + id + <span class="string">", username="</span> + username + <span class="string">", sex="</span> + sex </span><br><span class="line">            + <span class="string">", birthday="</span> + birthday + <span class="string">", address="</span> + address + <span class="string">"]"</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      自定义框架
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第二章 Mybatis入门 第3节 基于注解的Mybatis使用</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_03%20%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84Mybatis%E4%BD%BF%E7%94%A8.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_03%20%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84Mybatis%E4%BD%BF%E7%94%A8.html</id>
    <published>2019-09-08T09:42:51.000Z</published>
    <updated>2019-09-08T09:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-3-基于注解的Mybatis使用"><a href="#2-3-基于注解的Mybatis使用" class="headerlink" title="2.3 基于注解的Mybatis使用"></a>2.3 基于注解的Mybatis使用</h1><h2 id="2-3-1-在持久层接口中添加注解"><a href="#2-3-1-在持久层接口中添加注解" class="headerlink" title="2.3.1 在持久层接口中添加注解"></a>2.3.1 在持久层接口中添加注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Title: IUserDao&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Description: 用户的持久层操作&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Company: http://www.itheima.com/ &lt;/p&gt; </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 查询所有用户 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user"</span>) </span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-2-修改SqlMapConfig-xml"><a href="#2-3-2-修改SqlMapConfig-xml" class="headerlink" title="2.3.2 修改SqlMapConfig.xml"></a>2.3.2 修改SqlMapConfig.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 告知mybatis映射配置的位置 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.itheima.dao.IUserDao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-3-注意事项："><a href="#2-3-3-注意事项：" class="headerlink" title="2.3.3 注意事项："></a>2.3.3 注意事项：</h2><p>在使用基于注解的Mybatis配置时，请移除xml的映射配置（IUserDao.xml）。</p>]]></content>
    
    <summary type="html">
    
      基于注解的Mybatis使用
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第二章 Mybatis入门 第2节 搭建Mybatis开发环境</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_02%20%E6%90%AD%E5%BB%BAMybatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_02%20%E6%90%AD%E5%BB%BAMybatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83.html</id>
    <published>2019-09-08T09:32:56.000Z</published>
    <updated>2019-09-08T09:32:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-2-搭建Mybatis开发环境"><a href="#2-2-搭建Mybatis开发环境" class="headerlink" title="2.2 搭建Mybatis开发环境"></a>2.2 搭建Mybatis开发环境</h1><h2 id="2-2-1-创建maven工程"><a href="#2-2-1-创建maven工程" class="headerlink" title="2.2.1 创建maven工程"></a>2.2.1 创建maven工程</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建mybatis01的工程，工程信息如下：</span></span><br><span class="line"><span class="attr">Groupid</span>:<span class="string">com.ithiema</span></span><br><span class="line"><span class="attr">ArtifactId</span>:<span class="string">mybatis01</span></span><br><span class="line"><span class="attr">Packing</span>:<span class="string">jar</span></span><br></pre></td></tr></table></figure><h2 id="2-2-2-添加Mybatis3-4-5的坐标"><a href="#2-2-2-添加Mybatis3-4-5的坐标" class="headerlink" title="2.2.2 添加Mybatis3.4.5的坐标"></a>2.2.2 添加Mybatis3.4.5的坐标</h2><p>在pom.xml文件中添加Mybatis3.4.5的坐标，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-3-编写User实体类"><a href="#2-2-3-编写User实体类" class="headerlink" title="2.2.3 编写User实体类"></a>2.2.3 编写User实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> id; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123; <span class="keyword">this</span>.id = id; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> username; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123; <span class="keyword">this</span>.username = username; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> birthday; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123; <span class="keyword">this</span>.birthday = birthday; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> sex; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123; <span class="keyword">this</span>.sex = sex; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> address; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123; <span class="keyword">this</span>.address = address; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> + <span class="string">"id="</span> + id + <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", birthday="</span> + birthday + <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", address='"</span> + address + <span class="string">'\''</span> + <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-4-编写持久层接口IUserDao"><a href="#2-2-4-编写持久层接口IUserDao" class="headerlink" title="2.2.4 编写持久层接口IUserDao"></a>2.2.4 编写持久层接口IUserDao</h2><ul><li><code>IUserDao</code>接口就是我们的持久层接口（也可以写成<code>UserDao</code>或者<code>UserMapper</code>），具体代码如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-5-编写dao接口的映射文件"><a href="#2-2-5-编写dao接口的映射文件" class="headerlink" title="2.2.5 编写dao接口的映射文件"></a>2.2.5 编写dao接口的映射文件</h2><h3 id="IUserDao-xml要求："><a href="#IUserDao-xml要求：" class="headerlink" title="IUserDao.xml要求："></a>IUserDao.xml要求：</h3><ul><li><strong>创建位置</strong>：必须和持久层接口在相同的包中。</li><li><strong>名称</strong>：必须以持久层接口名称命名文件名，扩展名是.xml</li></ul><img src="//cdn.foreversfj.com/image/blog/20190908/bsYt5cMdaY8Y.png!blog"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.dao.IUserDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置查询所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">resultType</span>=<span class="string">"com.itheima.domain.User"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-6-编写映射配置文件"><a href="#2-2-6-编写映射配置文件" class="headerlink" title="2.2.6 编写映射配置文件"></a>2.2.6 编写映射配置文件</h2><p><strong><code>SqlMapConfig.xml</code></strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis的主配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置mysql的环境--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置事务的类型--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 配置数据源（连接池） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 配置连接数据库的4个基本信息 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/eesy_mybatis"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/itheima/dao/IUserDao.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-7-编写测试类"><a href="#2-2-7-编写测试类" class="headerlink" title="2.2.7 编写测试类"></a>2.2.7 编写测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入门案例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//1.读取配置文件</span></span><br><span class="line">        InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">        <span class="comment">//2.创建SqlSessionFactory工厂</span></span><br><span class="line">        SqlSessionFactoryBuilder builder = <span class="keyword">new</span> SqlSessionFactoryBuilder();</span><br><span class="line">        SqlSessionFactory factory = builder.build(in);</span><br><span class="line">        <span class="comment">//3.使用工厂生产SqlSession对象</span></span><br><span class="line">        SqlSession session = factory.openSession();</span><br><span class="line">        <span class="comment">//4.使用SqlSession创建Dao接口的代理对象</span></span><br><span class="line">        IUserDao userDao = session.getMapper(IUserDao<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">//5.使用代理对象执行方法</span></span><br><span class="line">        List&lt;User&gt; users = userDao.findAll();</span><br><span class="line">        <span class="keyword">for</span>(User user : users)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放资源</span></span><br><span class="line">        session.close();</span><br><span class="line">        in.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-2-8-环境搭建的注意事项"><a href="#2-2-8-环境搭建的注意事项" class="headerlink" title="2.2.8 环境搭建的注意事项"></a>2.2.8 环境搭建的注意事项</h1><ol><li><p>创建<code>IUserDao.xml</code>和<code>IUserDao.java</code>时名称是为了与之前的知识保持一致。在Mybatis中它把持久层的操作接口名称和映射文件也叫作：Mapper</p><p>所以：<code>IUserDao</code>和<code>IUserMapper</code>是一样的</p></li><li><p>在idea中创建目录的时候，它和包是不一样的</p><p>包在创建时，<code>com.itheima.dao</code>是<strong>三级结构</strong></p><p>目录在创建时，<code>com.itheima.dao</code>是<strong>一级结构</strong></p></li><li><p>Mybatis的映射文件位置必须和dao接口的包结构保持一致</p></li><li><p>映射配置文件的mapper标签namespace属性的取值必须是dao接口的全限定类名</p></li><li><p>映射配置文件的操作配置（select），属性id的取值必须是dao接口的方法名</p><blockquote><p>当我们遵从了3、4、5点之后，在开发中就无须在写dao的实现类</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      搭建Mybatis开发环境
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第二章 Mybatis入门 第1节 Mybatis安装</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_01%20%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/02_01%20%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87.html</id>
    <published>2019-09-08T09:02:49.000Z</published>
    <updated>2019-09-08T09:02:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2-1-Mybatis框架开发的准备"><a href="#2-1-Mybatis框架开发的准备" class="headerlink" title="2.1 Mybatis框架开发的准备"></a>2.1 Mybatis框架开发的准备</h1><h2 id="2-1-1-中文官网下载Mybatis框架"><a href="#2-1-1-中文官网下载Mybatis框架" class="headerlink" title="2.1.1 中文官网下载Mybatis框架"></a>2.1.1 中文官网下载Mybatis框架</h2><ul><li><p>浏览器输入<a href="http://www.mybatis.cn/" target="_blank" rel="noopener">http://www.mybatis.cn/</a>可以直接进入MyBatis的中文官网</p><img src="//cdn.foreversfj.com/image/blog/20190908/BnEBg7Gps1wx.png!blog"></li><li><p>点击mybatis jar下载，可以选择选择的版本</p><img src="//cdn.foreversfj.com/image/blog/20190908/tV928EQivfBC.png!blog"><ul><li>第一个链接是直接转到百度网盘下载</li><li>第二个是转到GitHub从仓库下载</li><li>第三个是从百度云下载</li></ul></li></ul><h2 id="2-1-2-英文官网下载Mybatis框架"><a href="#2-1-2-英文官网下载Mybatis框架" class="headerlink" title="2.1.2 英文官网下载Mybatis框架"></a>2.1.2 英文官网下载Mybatis框架</h2><ul><li><p>点击<a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">这里</a>可以直接进入MyBatis的英文官网</p><p><img src="//cdn.foreversfj.com/image/blog/20190908/cLtITSFKqALa.png!blog" alt=""></p></li><li><p>选择语言，进入中文版本的开发文档。</p><p><img src="//cdn.foreversfj.com/image/blog/20190908/Rb1RJ3uPKude.png" alt=""></p><ul><li><p>可以看到熟悉的中文开发文档了。</p><img src="//cdn.foreversfj.com/image/blog/20190908/70mlgVVDB1wa.png!blog"></li><li><p>在“入门”中进入MyBatis的GitHub下载仓库</p><img src="//cdn.foreversfj.com/image/blog/20190908/wwybjmttff6z.png!blog"></li><li><p>在<code>Assets</code>中选择自己需要的版本，下载源码</p><img src="//cdn.foreversfj.com/image/blog/20190908/dPUhida8l4MQ.png!blog"></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      本节简述使用MyBatis框架前需要做的的一些准备工作
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第一章 框架概述 第2节 JDBC编程的分析</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/01_02%20JDBC%E7%BC%96%E7%A8%8B%E7%9A%84%E5%88%86%E6%9E%90.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/01_02%20JDBC%E7%BC%96%E7%A8%8B%E7%9A%84%E5%88%86%E6%9E%90.html</id>
    <published>2019-09-08T08:51:39.000Z</published>
    <updated>2019-09-08T08:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-2-JDBC编程的分析"><a href="#1-2-JDBC编程的分析" class="headerlink" title="1.2 JDBC编程的分析"></a>1.2 <code>JDBC</code>编程的分析</h1><h2 id="1-2-1-jdbc程序的回顾"><a href="#1-2-1-jdbc程序的回顾" class="headerlink" title="1.2.1 jdbc程序的回顾"></a>1.2.1 <code>jdbc</code>程序的回顾</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Connection connection = <span class="keyword">null</span>;</span><br><span class="line">    PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">    ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//加载数据库驱动</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//通过驱动管理类获取数据库链接</span></span><br><span class="line">        connection = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf-8"</span>,<span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line">        <span class="comment">//定义sql语句 ?表示占位符</span></span><br><span class="line">        String sql = <span class="string">"select * from user where username = ?"</span>;</span><br><span class="line">        <span class="comment">//获取预处理statement preparedStatement = connection.prepareStatement(sql);</span></span><br><span class="line">        <span class="comment">//设置参数，第一个参数为sql语句中参数的序号（从1开始），第二个参数为设置的参数值</span></span><br><span class="line">        preparedStatement.setString(<span class="number">1</span>, <span class="string">"王五"</span>);</span><br><span class="line">        <span class="comment">//向数据库发出sql执行查询，查询出结果集 </span></span><br><span class="line">        resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="comment">//遍历查询结果集</span></span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123; </span><br><span class="line">            System.out.println(resultSet.getString(<span class="string">"id"</span>)+<span class="string">" "</span>+resultSet.getString(<span class="string">"username"</span>));</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span>&#123; </span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123; </span><br><span class="line">            <span class="keyword">try</span> &#123; </span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123; </span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(preparedStatement!=<span class="keyword">null</span>)&#123; </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123; </span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123; </span><br><span class="line">            <span class="keyword">try</span> &#123; connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123; </span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-2-jdbc问题分析"><a href="#1-2-2-jdbc问题分析" class="headerlink" title="1.2.2 jdbc问题分析"></a>1.2.2 <code>jdbc</code>问题分析</h2><p>&emsp;&emsp;1、数据库链接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库链接池可解决此问题</p><p>&emsp;&emsp;2、<code>Sql</code>语句在代码中硬编码，造成代码不易维护，实际应用<code>sql</code>变化的可能较大，<code>sql</code>变动需要改变<code>java</code>代码。</p><p>&emsp;&emsp;3、使用<code>preparedStatement</code>向占有位符号传参数存在硬编码，因为<code>sql</code>语句的<code>where</code>条件不一定，可能多也可能少，修改<code>sql</code>还要修改代码，系统不易维护。</p><p>&emsp;&emsp;4、对结果集解析存在硬编码（查询列名），<code>sql</code>变化导致解析代码变化，系统不易维护，如果能将数据库记录封装成<code>pojo</code>对象解析比较方便。</p>]]></content>
    
    <summary type="html">
    
      本节回顾JDBC编程中的一些问题
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第一章 框架概述 第1节 什么是框架</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/01_01%20%E4%BB%80%E4%B9%88%E6%98%AF%E6%A1%86%E6%9E%B6.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/2019-09-08-/Mybatis/01_01%20%E4%BB%80%E4%B9%88%E6%98%AF%E6%A1%86%E6%9E%B6.html</id>
    <published>2019-09-08T08:16:52.000Z</published>
    <updated>2019-09-08T08:16:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-1-什么是框架"><a href="#1-1-什么是框架" class="headerlink" title="1.1 什么是框架"></a>1.1 什么是框架</h1><h2 id="1-1-1-什么是框架"><a href="#1-1-1-什么是框架" class="headerlink" title="1.1.1 什么是框架"></a>1.1.1 什么是框架</h2><p>&emsp;&emsp;框架（<code>Framework</code>）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法；另一种定义认为，框架是可被应用开发者定制的应用骨架。前者是从应用方面而后者是从目的方面给出的定义。</p><p>&emsp;&emsp;简而言之，框架其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别人搭好的舞台，你来做表演。而且，框架一般是成熟的，不断升级的软件。</p><h2 id="1-1-2-框架要解决的问题"><a href="#1-1-2-框架要解决的问题" class="headerlink" title="1.1.2 框架要解决的问题"></a>1.1.2 框架要解决的问题</h2><p>&emsp;&emsp;框架要解决的最重要的一个问题是技术整合的问题，在<code>J2EE</code>的框架中，有着各种各样的技术，不同的软件企业需要从<code>J2EE</code>中选择不同的技术，这就使得软件企业最终的应用依赖于这些技术，技术自身的复杂性和技术的风险性将会直接对应用造成冲击。而应用是软件企业的核心，是竞争力的关键所在，因此应该将应用自身的设计和具体的实现技术解耦。这样，软件企业的研发将集中在应用的设计上，而不是具体的技术实现，技术实现是应用的底层支撑，它不应该直接对应用产生影响。</p><p>&emsp;&emsp;<font color=red>框架一般处在低层应用平台（如J2EE）和高层业务逻辑之间的中间层。</font></p><h2 id="1-1-3-软件开发的分层重要性"><a href="#1-1-3-软件开发的分层重要性" class="headerlink" title="1.1.3 软件开发的分层重要性"></a>1.1.3 软件开发的分层重要性</h2><p>&emsp;&emsp;框架的重要性在于它实现了部分功能，并且能够很好的将低层应用平台和高层业务逻辑进行了缓和。为了实现软件工程中的“高内聚、低耦合”。把问题划分开来各个解决，易于控制，易于延展，易于分配资源。我们常见的<code>MVC</code>软件设计思想就是很好的分层思想。</p><img src="//cdn.foreversfj.com/image/blog/20190908/aJfNPuILTFy4.jpg!blog" style="zoom:80%;" /><p>&emsp;&emsp;通过分层更好的实现了各个部分的职责，在每一层将再细化出不同的框架，分别解决各层关注的问题。</p><h2 id="1-1-4-分层开发下的常见框架"><a href="#1-1-4-分层开发下的常见框架" class="headerlink" title="1.1.4 分层开发下的常见框架"></a>1.1.4 分层开发下的常见框架</h2><p><strong>常见的<code>JavaEE</code>开发框架：</strong></p><ol><li><p><strong>解决数据的持久化问题的框架</strong></p><img src="//cdn.foreversfj.com/image/blog/20190908/g3lALcAjupwk.jpg!blog" style="zoom:80%;" /></li></ol><p>&emsp;&emsp;作为持久层的框架，还有一个封装程度更高的框架就是<code>Hibernate</code>，但这个框架因为各种原因目前在国内的流行程度下降太多，现在公司开发也越来越少使用。目前使用<code>Spring Data</code>来实现数据持久化也是一种趋势。 </p><ol start="2"><li><p><strong>解决WEB层问题的MVC框架</strong></p><img src="//cdn.foreversfj.com/image/blog/20190908/FpMuqWsaF0x7.jpg!blog" style="zoom:80%;" /></li><li><p><strong>解决技术整合问题的框架</strong></p><img src="//cdn.foreversfj.com/image/blog/20190908/HHbImryTaLyS.jpg!blog"></li></ol><h2 id="1-1-5-MyBatis框架概述"><a href="#1-1-5-MyBatis框架概述" class="headerlink" title="1.1.5 MyBatis框架概述"></a>1.1.5 <code>MyBatis</code>框架概述</h2><p>&emsp;&emsp;<code>mybatis</code>是一个优秀的基于<code>java</code>的持久层框架，它内部封装了<code>jdbc</code>，使开发者只需要关注<code>sql</code>语句本身，而不需要花费精力去处理加载驱动、创建连接、创建<code>statement</code>等繁杂的过程。</p><p>&emsp;&emsp;<code>mybatis</code>通过<code>xml</code>或注解的方式将要执行的各种<code>statement</code>配置起来，并通过<code>java</code>对象和<code>statement</code>中<code>sql</code>的动态参数进行映射生成最终执行的<code>sql</code>语句，最后由<code>mybatis</code>框架执行<code>sql</code>并将结果映射为<code>java</code>对象并返回。</p><p>&emsp;&emsp;采用<code>ORM</code>思想解决了实体和数据库映射的问题，对<code>jdbc</code>进行了封装，屏蔽了<code>jdbc api</code>底层访问细节，使我们不用与<code>jdbc api</code>打交道，就可以完成对数据库的持久化操作。</p><p>&emsp;&emsp;为了我们能够更好掌握框架运行的内部过程，并且有更好的体验，下面我们将从自定义<code>Mybatis</code>框架开始来学习框架。此时我们将会体验框架从无到有的过程体验，也能够很好的综合前面阶段所学的基础。</p>]]></content>
    
    <summary type="html">
    
      框架（Framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法；另一种定义认为，框架是可被应用开发者定制的应用骨架。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="框架" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Mybatis" scheme="https://blog.foreversfj.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>第四部分 第十四章 3.Redis工具</title>
    <link href="https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-/Java/JavaWeb/14_3%20Redis%E5%B7%A5%E5%85%B7.html"/>
    <id>https://blog.foreversfj.com/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/2019-08-28-/Java/JavaWeb/14_3%20Redis%E5%B7%A5%E5%85%B7.html</id>
    <published>2019-08-28T03:28:23.000Z</published>
    <updated>2019-08-28T03:28:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="14-3-Redis工具"><a href="#14-3-Redis工具" class="headerlink" title="14.3 Redis工具"></a>14.3 Redis工具</h1><h2 id="14-3-1-持久化"><a href="#14-3-1-持久化" class="headerlink" title="14.3.1 持久化"></a>14.3.1 持久化</h2><ul><li><p>redis是一个内存数据库，当redis服务器重启，或者电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。</p></li><li><p>redis持久化机制：</p><ul><li><p><strong>RDB</strong>：默认方式，不需要进行配置，默认就使用这种机制</p><blockquote><p>在一定的间隔时间中，检测key的变化情况，然后持久化数据</p></blockquote><ol><li>编辑<code>redis.windwos.conf</code>文件<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   after 900 sec (15 min) if at least 1 key changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">900 1</span></span><br><span class="line"><span class="comment">#   after 300 sec (5 min) if at least 10 keys changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">300 10</span></span><br><span class="line"><span class="comment">#   after 60 sec if at least 10000 keys changed</span></span><br><span class="line"><span class="attr">save</span> <span class="string">60 10000</span></span><br></pre></td></tr></table></figure></li><li>重新启动redis服务器，并指定配置文件名称<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\JavaWeb\redis\windows<span class="number">-64</span>\redis<span class="number">-2.8</span><span class="number">.9</span>&gt;redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>AOF</strong>：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据</p><ol><li>编辑<code>redis.windwos.conf</code>文件<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">appendonly</span> <span class="string">no（关闭aof） --&gt; appendonly yes （开启aof）</span></span><br><span class="line"><span class="comment"># appendfsync always ： 每一次操作都进行持久化</span></span><br><span class="line"><span class="attr">appendfsync</span> <span class="string">everysec ： 每隔一秒进行一次持久化</span></span><br><span class="line"><span class="comment"># appendfsync no     ： 不进行持久化</span></span><br></pre></td></tr></table></figure></li></ol></li></ul></li></ul><h2 id="14-3-2-Java客户端-Jedis"><a href="#14-3-2-Java客户端-Jedis" class="headerlink" title="14.3.2 Java客户端 Jedis"></a>14.3.2 Java客户端 Jedis</h2><ul><li><strong><code>Jedis</code></strong>： 一款java操作redis数据库的工具.</li></ul><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>下载jedis的jar包</li><li>使用  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line">jedis.set(<span class="string">"username"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure></li></ol><h4 id="Jedis操作各种redis中的数据结构"><a href="#Jedis操作各种redis中的数据结构" class="headerlink" title="Jedis操作各种redis中的数据结构"></a>Jedis操作各种redis中的数据结构</h4><h5 id="●-字符串类型-string"><a href="#●-字符串类型-string" class="headerlink" title="● 字符串类型 string"></a>● 字符串类型 string</h5><ul><li><strong><code>set</code></strong></li><li><strong><code>get</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line"><span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();</span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">//存储</span></span><br><span class="line">jedis.set(<span class="string">"username"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line">String username = jedis.get(<span class="string">"username"</span>);</span><br><span class="line">System.out.println(username);</span><br><span class="line"><span class="comment">//可以使用setex()方法存储可以指定过期时间的 key value</span></span><br><span class="line"><span class="comment">//将activecode：hehe键值对存入redis，并且20秒后自动删除该键值对</span></span><br><span class="line">jedis.setex(<span class="string">"activecode"</span>,<span class="number">20</span>,<span class="string">"hehe"</span>);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-哈希类型-hash"><a href="#●-哈希类型-hash" class="headerlink" title="● 哈希类型 hash"></a>● 哈希类型 hash</h5><p><strong>map格式</strong>  </p><ul><li><strong><code>hset</code></strong></li><li><strong><code>hget</code></strong></li><li><strong><code>hgetAll</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// 存储hash</span></span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"name"</span>,<span class="string">"lisi"</span>);</span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"age"</span>,<span class="string">"23"</span>);</span><br><span class="line">jedis.hset(<span class="string">"user"</span>,<span class="string">"gender"</span>,<span class="string">"female"</span>);</span><br><span class="line"><span class="comment">// 获取hash</span></span><br><span class="line">String name = jedis.hget(<span class="string">"user"</span>, <span class="string">"name"</span>);</span><br><span class="line">System.out.println(name);</span><br><span class="line"><span class="comment">// 获取hash的所有map中的数据</span></span><br><span class="line">Map&lt;String, String&gt; user = jedis.hgetAll(<span class="string">"user"</span>);</span><br><span class="line"><span class="comment">// keyset</span></span><br><span class="line">Set&lt;String&gt; keySet = user.keySet();</span><br><span class="line"><span class="keyword">for</span> (String key : keySet) &#123;</span><br><span class="line">    <span class="comment">//获取value</span></span><br><span class="line">    String value = user.get(key);</span><br><span class="line">    System.out.println(key + <span class="string">":"</span> + value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-列表类型-list"><a href="#●-列表类型-list" class="headerlink" title="● 列表类型 list"></a>● 列表类型 list</h5><p><strong>linkedlist格式。支持重复元素</strong></p><ul><li><strong><code>lpush / rpush</code></strong></li><li><strong><code>lpop / rpop</code></strong></li><li><strong><code>lrange start end</code></strong>：范围获取</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// list 存储</span></span><br><span class="line">jedis.lpush(<span class="string">"mylist"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//从左边存</span></span><br><span class="line">jedis.rpush(<span class="string">"mylist"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>);<span class="comment">//从右边存</span></span><br><span class="line"><span class="comment">// list 范围获取</span></span><br><span class="line">List&lt;String&gt; mylist = jedis.lrange(<span class="string">"mylist"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mylist);</span><br><span class="line"><span class="comment">// list 弹出</span></span><br><span class="line">String element1 = jedis.lpop(<span class="string">"mylist"</span>);<span class="comment">//c</span></span><br><span class="line">System.out.println(element1);</span><br><span class="line">String element2 = jedis.rpop(<span class="string">"mylist"</span>);<span class="comment">//c</span></span><br><span class="line">System.out.println(element2);</span><br><span class="line"><span class="comment">// list 范围获取</span></span><br><span class="line">List&lt;String&gt; mylist2 = jedis.lrange(<span class="string">"mylist"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mylist2);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-集合类型-set"><a href="#●-集合类型-set" class="headerlink" title="● 集合类型 set"></a>● 集合类型 set</h5><p><strong>不允许重复元素</strong></p><ul><li><strong><code>sadd</code></strong></li><li><strong><code>smembers</code></strong>：获取所有元素</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// set 存储</span></span><br><span class="line">jedis.sadd(<span class="string">"myset"</span>,<span class="string">"java"</span>,<span class="string">"php"</span>,<span class="string">"c++"</span>);</span><br><span class="line"><span class="comment">// set 获取</span></span><br><span class="line">Set&lt;String&gt; myset = jedis.smembers(<span class="string">"myset"</span>);</span><br><span class="line">System.out.println(myset);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h5 id="●-有序集合类型-sortedset"><a href="#●-有序集合类型-sortedset" class="headerlink" title="● 有序集合类型 sortedset"></a>● 有序集合类型 sortedset</h5><p><strong>不允许重复元素，且元素有顺序</strong></p><ul><li><strong><code>zadd</code></strong></li><li><strong><code>zrange</code></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 获取连接</span></span><br><span class="line">Jedis jedis = <span class="keyword">new</span> Jedis();<span class="comment">//如果使用空参构造，默认值 "localhost",6379端口</span></span><br><span class="line"><span class="comment">//2. 操作</span></span><br><span class="line"><span class="comment">// sortedset 存储</span></span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">3</span>,<span class="string">"亚瑟"</span>);</span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">30</span>,<span class="string">"后裔"</span>);</span><br><span class="line">jedis.zadd(<span class="string">"mysortedset"</span>,<span class="number">55</span>,<span class="string">"孙悟空"</span>);</span><br><span class="line"><span class="comment">// sortedset 获取</span></span><br><span class="line">Set&lt;String&gt; mysortedset = jedis.zrange(<span class="string">"mysortedset"</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">System.out.println(mysortedset);</span><br><span class="line"><span class="comment">//3. 关闭连接</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure><h3 id="jedis连接池：-JedisPool"><a href="#jedis连接池：-JedisPool" class="headerlink" title="jedis连接池： JedisPool"></a>jedis连接池： JedisPool</h3><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ol><li><p>创建JedisPool连接池对象</p></li><li><p>调用方法 getResource()方法获取Jedis连接</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0.创建一个配置对象</span></span><br><span class="line">JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">config.setMaxTotal(<span class="number">50</span>);</span><br><span class="line">config.setMaxIdle(<span class="number">10</span>);</span><br><span class="line"><span class="comment">//1.创建Jedis连接池对象</span></span><br><span class="line">JedisPool jedisPool = <span class="keyword">new</span> JedisPool(config,<span class="string">"localhost"</span>,<span class="number">6379</span>);</span><br><span class="line"><span class="comment">//2.获取连接</span></span><br><span class="line">Jedis jedis = jedisPool.getResource();</span><br><span class="line"><span class="comment">//3. 使用</span></span><br><span class="line">jedis.set(<span class="string">"hehe"</span>,<span class="string">"heihei"</span>);</span><br><span class="line"><span class="comment">//4. 关闭 归还到连接池中</span></span><br><span class="line">jedis.close();</span><br></pre></td></tr></table></figure></li></ol><h4 id="连接池工具类"><a href="#连接池工具类" class="headerlink" title="连接池工具类"></a>连接池工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisPoolUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JedisPool jedisPool;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//读取配置文件</span></span><br><span class="line">        InputStream is = JedisPoolUtils.class.getClassLoader().getResourceAsStream("jedis.properties");</span><br><span class="line">        <span class="comment">//创建Properties对象</span></span><br><span class="line">        Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">//关联文件</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pro.load(is);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取数据，设置到JedisPoolConfig中</span></span><br><span class="line">        JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        config.setMaxTotal(Integer.parseInt(pro.getProperty(<span class="string">"maxTotal"</span>)));</span><br><span class="line">        config.setMaxIdle(Integer.parseInt(pro.getProperty(<span class="string">"maxIdle"</span>)));</span><br><span class="line">        <span class="comment">//初始化JedisPool</span></span><br><span class="line">        jedisPool = <span class="keyword">new</span> JedisPool(config,pro.getProperty(<span class="string">"host"</span>),Integer.parseInt(pro.getProperty(<span class="string">"port"</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取连接方法</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Jedis <span class="title">getJedis</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jedisPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      redis是一个内存数据库，当redis服务器重启，或者电脑重启，数据会丢失，我们可以将redis内存中的数据持久化保存到硬盘的文件中。
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Java" scheme="https://blog.foreversfj.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
      <category term="JavaWeb" scheme="https://blog.foreversfj.com/tags/JavaWeb/"/>
    
  </entry>
  
</feed>
